_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:   1
- ASSEMBLE INFORMATION - ( STARTUP )

|             Command line         :  C:\Softune\BIN\fasm907s.exe -f C:\Wor |
|                                     k\Project\Блоки Fujitsu MB96F330\Sour |
|                                     ceBoot\OPT\96338us.opa -Xdof -o C:\Wo |
|                                     rk\Project\Блоки Fujitsu MB96F330\Sou |
|                                     rceBoot\OBJ\Start.obj -lf C:\Work\Pro |
|                                     ject\Блоки Fujitsu MB96F330\SourceBoo |
|                                     t\LST\Start.lst C:\Work\Project\Блоки |
|                                      Fujitsu MB96F330\SourceBoot\Src\Star |
|                                     t.asm -@Hf C:\Work\Project\Блоки Fuji |
|                                     tsu MB96F330\SourceBoot\OPT\Start.tpi |
|                                                                           |
|             Total errors         :    0                                   |
|             Total warnings       :    0                                   |
|                                       There were no errors.               |
|                                                                           |
|             Object file          :  C:\Work\Project\Блоки Fujitsu MB96F33 |
|                                     0\SourceBoot\OBJ\Start.obj            |
|             List file            :  C:\Work\Project\Блоки Fujitsu MB96F33 |
|                                     0\SourceBoot\LST\Start.lst            |
|                                                                           |
|                                                                           |
| NO NEST     SOURCE-FILE-NAME                     CREATE DATE/TIME         |
| -- -------- ------------------------------------ ------------------------ |
|  0          C:\Work\Project\Блоки Fujitsu MB96F3 2014-10-16 15:20:28      |
|             30\SourceBoot\Src\Start.asm                                   |
| -- -------- ------------------------------------ ------------------------ |
|                                                                           |
|                                                                           |
|             Current path         :  C:\Work\Project\Блоки Fujitsu MB96F33 |
|                                     0\SourceBoot                          |
|             Include path         :  INC907     = C:\Softune\LIB\907\INCLU |
|                                                  DE\                      |
|             Work file path       :  TMP        = c:\Temp\                 |
|             Default Option file  :  OPT907     = C:\Softune\LIB\907\ (fas |
|                                                  m907.opt)                |
|                                                                           |
|                                                                           |
| NO NEST     OPTION-FILE-NAME                     CREATE DATE/TIME         |
| -- -------- ------------------------------------ ------------------------ |
|  0          C:\Work\Project\Блоки Fujitsu MB96F3 2015-01-22 10:24:16      |
|             30\SourceBoot\OPT\96338us.opa                                 |
|             ------------------------------------                          |
|             -g                                                            |
|             -w 2                                                          |
|             -linf ON                                                      |
|             -lsrc ON                                                      |
|             -lsec ON                                                      |
|             -lcros OFF                                                    |
|             -linc OFF                                                     |
|             -lexp OBJ                                                     |
|             -pl 60                                                        |
|             -pw 100                                                       |
|             -tab 8                                                        |
|             -cwno                                                         |
|             -cpu MB96F338USA                                              |
| -- -------- ------------------------------------ ------------------------ |
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:   2
- ASSEMBLE INFORMATION - ( STARTUP )

|___________________________________________________________________________|


_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:   3
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

<C:\Work\Project\Блоки Fujitsu MB96F330
\SourceBoot\Src\Start.asm>              =====
                                            1      ;===============================================
                                                   =====================
                                            2      ;
                                            3      ;    Startup file for memory and basic controlle
                                                   r initialisation
                                            4      ;
                                            5      ;    MB96300 Family C Compiler
                                            6      ;
                                            7      ;===============================================
                                                   =====================
                                            8      ; 1  Disclaimer
                                            9      ;===============================================
                                                   =====================
                                           10      ;

                                           11      /***********************************************
                                                   *************************/
                                           12      /*               (C) Fujitsu Semiconductor Europ
                                                   e GmbH (FSEU)           */
                                           13      /*
                                                                           */
                                           14      /* The following software deliverable is intende
                                                   d for and must only be  */
                                           15      /* used for reference and in an evaluation labor
                                                   atory environment.      */
                                           16      /* It is provided on an as-is basis without char
                                                   ge and is subject to    */
                                           17      /* alterations.
                                                                           */
                                           18      /* It is the user’s obligation to fully test the
                                                    software in its        */
                                           19      /* environment and to ensure proper functionalit
                                                   y, qualification and    */
                                           20      /* compliance with component specifications.
                                                                           */
                                           21      /*
                                                                           */
                                           22      /* In the event the software deliverable include
                                                   s the use of open       */
                                           23      /* source components, the provisions of the gove
                                                   rning open source       */
                                           24      /* license agreement shall apply with respect to
                                                    such software          */
                                           25      /* deliverable.
                                                                           */
                                           26      /* FSEU does not warrant that the deliverables d
                                                   o not infringe any      */
                                           27      /* third party intellectual property right (IPR)
                                                   . In the event that     */
                                           28      /* the deliverables infringe a third party IPR i
                                                   t is the sole           */
                                           29      /* responsibility of the customer to obtain nece
                                                   ssary licenses to       */
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:   4
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                           30      /* continue the usage of the deliverable.
                                                                           */
                                           31      /*
                                                                           */
                                           32      /* To the maximum extent permitted by applicable
                                                    law FSEU disclaims all */
                                           33      /* warranties, whether express or implied, in pa
                                                   rticular, but not       */
                                           34      /* limited to, warranties of merchantability and
                                                    fitness for a          */
                                           35      /* particular purpose for which the deliverable
                                                   is not designated.      */
                                           36      /*
                                                                           */
                                           37      /* To the maximum extent permitted by applicable
                                                    law, FSEU’s liability  */
                                           38      /* is restricted to intentional misconduct and g
                                                   ross negligence.        */
                                           39      /* FSEU is not liable for consequential damages.
                                                                           */
                                           40      /*
                                                                           */
                                           41      /* (V1.5)
                                                                           */
                                           42      /***********************************************
                                                   *************************/
                                           43
                                           44

                                           45      ;
                                           46      ;===============================================
                                                   =====================
                                           47
MODULE NAME = STARTUP                      48                .PROGRAM  STARTUP
                                           49                .TITLE    "STARTUP FILE FOR MEMORY INI
                                                   TIALISATION"
                                           50
                                           51      ;===============================================
                                                   =====================
                                           52      ; 2  Contents
                                           53      ;===============================================
                                                   =====================
                                           54      ;
                                           55      ; 1  Disclaimer
                                           56      ;
                                           57      ; 2  Contents
                                           58      ;
                                           59      ; 3  History
                                           60      ;
                                           61      ; 4  Settings
                                           62      ; 4.1   Controller Series, Device
                                           63      ; 4.2   C-language Memory model
                                           64      ; 4.3   Function-Call Interface
                                           65      ; 4.4   Constant Data Handling
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:   5
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                           66      ; 4.5   Stack Type and Stack Size
                                           67      ; 4.6   General Register Bank
                                           68      ; 4.7   Low-Level Library Interface
                                           69      ; 4.8   Clock Selection
                                           70      ; 4.9   Clock Stabilization Time
                                           71      ; 4.10  External Bus Interface
                                           72      ; 4.11  ROM Mirror configuration
                                           73      ; 4.12  Flash Security
                                           74      ; 4.13  Flash Write Protection
                                           75      ; 4.14  Boot Vector
                                           76      ; 4.15  UART scanning
                                           77      ; 4.16  Enable RAMCODE Copying
                                           78      ; 4.17  Enable information stamp in ROM
                                           79      ; 4.18  Enable Background Debugging Mode
                                           80      ;
                                           81      ; 5  Section and Data Declaration
                                           82      ; 5.1   Several fixed addresses (fixed for MB963
                                                   xx controllers)
                                           83      ; 5.2   Set ROM Configuration for Boot Vector
                                           84      ; 5.3   Set ROM configuration for UART Scanning
                                           85      ; 5.4   Store version information
                                           86      ; 5.5   Declaration of __near addressed data sec
                                                   tions
                                           87      ; 5.6   Declaration of RAMCODE section and label
                                                   s
                                           88      ; 5.7   Declaration of sections containing other
                                                    sections description
                                           89      ; 5.8   Stack area and stack top definition/decl
                                                   aration
                                           90      ; 5.9   Direct page register dummy label definit
                                                   ion
                                           91      ; 5.10  Set Flash Security
                                           92      ; 5.11  Set Flash write protection
                                           93      ; 5.12  Debug address specification
                                           94      ;
                                           95      ; 6  Start-Up Code
                                           96      ; 6.1   Import external symbols
                                           97      ; 6.2   Program start (the reset vector should p
                                                   oint here)
                                           98      ; 6.3   "NOT RESET YET" WARNING
                                           99      ; 6.4   Initialisation of processor status
                                          100      ; 6.5   Set clock ratio (ignore subclock)
                                          101      ; 6.6   Set external bus configuaration
                                          102      ; 6.7   Prepare stacks and set the default stack
                                                    type
                                          103      ; 6.8   Copy initial values to data areas.
                                          104      ; 6.9   Clear uninitialized data areas to zero
                                          105      ; 6.10  Set Data Bank Register (DTB) and Direct
                                                   Page Register (DPR)
                                          106      ; 6.11  ICU register initialization workaround
                                          107      ; 6.12  Wait for clocks to stabilize
                                          108      ; 6.13  Initialise Low-Level Library Interface
                                          109      ; 6.14  Call C-language main function
                                          110      ; 6.15  Shut down library
                                          111      ; 6.16  Program end loop
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:   6
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                          112      ;
                                          113      ;===============================================
                                                   =====================
                                          114      ; 3  History
                                          115      ;===============================================
                                                   =====================
                                          116      ; Id: START.ASM 7268 2011-05-30 09:11:06Z rlande

                                          117
                                          118      #define VERSION  "1.64"
                                          119      /*
                                          120      Revision 1.64 7268 2011-05-30 09:11:06Z rlande
                                          121      - corrected: bank register for CONST2 section
                                          122
                                          123      Revision 1.63 6929 2011-04-14 11:11:37Z rranze
                                          124      - added: MB96355RxB
                                          125      - added: new disclaimer
                                          126
                                          127      Revision 1.62 5575 2010-06-02 14:34:28Z rlande
                                          128      - updated: Note on changing clock settings
                                          129      - added: Check for CLKB maximum setting
                                          130
                                          131      Revision 1.61 5144 2010-04-12 11:49:30Z rlande
                                          132      - updated: Disclaimer
                                          133      - corrected: Clock setting protection for MB9638
                                                   8HxA
                                          134
                                          135      Revision 1.60 4104 2009-11-16 12:20:03Z rlande
                                          136      - added: Clock setting CPU_48MHZ_CLKP1_24MHZ_CLK
                                                   P2_16MHZ.
                                          137
                                          138      Revision 1.59 4041 2009-10-29 08:40:57Z rlande
                                          139      - changed: configuration sequence of CSs for ext
                                                   ernal vector mode.
                                          140
                                          141      Revision 1.58 3798 2009-09-29 08:46:42Z rlande
                                          142      - added: mode byte setting for external vector m
                                                   ode
                                          143
                                          144      Revision 1.57 3734 2009-09-03 08:57:19Z rlande
                                          145      - added: Check of clock settings for MB96384RxA,
                                                    MB96384YxA
                                          146
                                          147      Revision 1.56 3700 2009-08-24 15:38:49Z rlande
                                          148      - added: CLOCK_OPTIMIZATION setting
                                          149      - corrected: Flash B timing setup
                                          150      - corrected: System stack pointer initialization
                                                    if C lib is used
                                          151
                                          152      Revision 1.55 3360 2009-07-24 12:29:46Z rlande
                                          153      - removed: series MB96360
                                          154
                                          155      Revision 1.54 3179 2009-07-03 08:53:18Z rlande
                                          156      - added: devices MB96378HxB, MB96379RxB, MB96388
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:   7
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                                   HxB, MB96389RxB
                                          157      - changed: Security settings for compatibility t
                                                   o mask ROM
                                          158
                                          159      Revision 1.53 3144 2009-06-30 12:04:28Z rlande
                                          160      - corrected: Stack initialization if stack is at
                                                    end of bank
                                          161      - changed: Stack settings are generated from sec
                                                   tion instead of symbols.
                                          162      - note: Stack symbols are still generated for co
                                                   nvenience
                                          163
                                          164      Revision 1.52 3055 2009-06-08 09:11:01Z rlande
                                          165      - updated: disclaimer
                                          166
                                          167      Revision 1.51 3036 2009-05-25 15:05:50Z rlande
                                          168      - added: Clock setting CPU_56MHZ_CLKP2_8MHZ
                                          169
                                          170      Revision 1.50 2997 2009-05-12 13:55:42Z rlande
                                          171      - added: initialization of stack and global vari
                                                   ables
                                          172        outside bank 0.
                                          173
                                          174      Revision 1.49 2942 2009-04-30 15:42:36Z rlande
                                          175      - added: Clock setting CPU_48MHZ_CLKP1_16MHZ_CLK
                                                   P2_CLKP3_MAIN.
                                          176      - changed: Implementation of clock setting CPU_4
                                                   MHZ_MAIN_CLKP2_4MHZ.
                                          177
                                          178      Revision 1.48 2908 2009-04-22 10:41:52Z rlande
                                          179      - corrected: initialization of user stack
                                          180
                                          181      Revision 1.47 2868 2009-04-06 15:16:06Z rlande
                                          182      - added: Devices MB96313RxA, MB96313AxA, MB96315
                                                   AxA, MB96336UxA, MB96353RxA,
                                          183        MB96353AxA, MB96355AxA
                                          184
                                          185      Revision 1.46 2780 2009-03-13 15:27:28Z rlande
                                          186      - added: Devices MB96326RxB, MB96326YxB, MB96356
                                                   RxB, MB96356YxB
                                          187      - added: Crystal setting 16MHz
                                          188      - added: Clock setting CPU_48MHZ_CLKP1_16MHZ_CLK
                                                   P2_16MHZ
                                          189
                                          190      Revision 1.45  2748 2009-03-12 14:51:16Z rlande
                                          191      - added: Devices MB96345DxA
                                          192
                                          193      Revision 1.44  2477 2009-01-21 10:23:48Z rlande
                                          194      - corrected: clock VCO in PLL clock settings 4MH
                                                   z to 12MHz.
                                          195      - added: Preprocessor guard for illegal clock VC
                                                   O settings.
                                          196
                                          197      Revision 1.43  2475 2009-01-16 15:31:58Z rlande
                                          198      - added: Clock setting CPU_24MHZ_CLKP2_24MHZ.
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:   8
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                          199
                                          200      Revision 1.42  2452 2008-12-03 16:38:01Z rlande
                                          201      - changed: Series numbering
                                          202      - added: Series MB96315
                                          203      - added: devices MB96315RxA, MB96355RxA
                                          204      - added: check for illegal ext bus settings
                                          205      - changed: moved ROM-cfg settings to chapter 5
                                          206      - updated: chapter headings to common format
                                          207      - updated: table of contents
                                          208
                                          209      Revision 1.41  2428 2008-10-28 19:46:25Z rlande
                                          210      - added: Series MB96910
                                          211      - added: Device MB96918DxA
                                          212      - added: DataFlash A security feature
                                          213
                                          214      Revision 1.40  2008/09/05 11:21:39  rlande
                                          215      - added: Clock restrictions for MB96395RxA
                                          216
                                          217      Revision 1.39  2008/08/18 07:30:14  rlande
                                          218      - revised: All clock settings
                                          219
                                          220      Revision 1.38  2008/07/01 15:23:31  rlande
                                          221      - changed: CLKP3 setting for CPU_48MHZ_CLKP2_16M
                                                   HZ. Now 48MHz.
                                          222
                                          223      Revision 1.37  2008/06/30 17:21:03  rlande
                                          224      - corrected clock settings 32 MHz to 48 MHz
                                          225
                                          226      Revision 1.36  2008/06/24 15:34:14  rlande
                                          227      - added sector protection for S28, S29, S30, S31
                                                    (available on MB96379R)
                                          228
                                          229      Revision 1.35  2008/06/23 14:39:23  rlande
                                          230      - renamed CPU_40MHz_CLKP2_16MHZ to CPU_40MHZ_CLK
                                                   P2_16MHZ
                                          231
                                          232      Revision 1.34  2008/06/10 15:48:17  rlande
                                          233      - update: flash timing settings
                                          234
                                          235      Revision 1.33  2008/06/10 15:19:36  rlande
                                          236      - added: limitation to 48 MHz for 330 series
                                          237      - added: limitation to 40 MHz for 370 series
                                          238      - added: 40 MHz clock setting
                                          239
                                          240      Revision 1.32  2008/04/30 08:00:50  rlande
                                          241      - FLASH_B_AVAILABLE changed to macro that is cal
                                                   culated from SERIES and DEVICE
                                          242
                                          243      Revision 1.31  2008/02/27 10:23:34  mcuae
                                          244      - CPU_48MHZ_CLKP1_32MHZ_CLKP2_16MHZ clock settin
                                                   g added
                                          245
                                          246      Revision 1.30  2008/02/26 15:28:21  mcuae
                                          247      - clock settings corrected
                                          248      - Main/Satellite Flash term outdated, now: Flash
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:   9
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                                    A, Flash B
                                          249
                                          250      Revision 1.29  2008/02/11 15:26:33  mwilla
                                          251      - device configuration for ext. bus i/f settings
                                                    updated
                                          252
                                          253      Revision 1.28  2008/01/25 08:03:48  mwilla
                                          254      - clock settings corrected and optimized
                                          255
                                          256      Revision 1.27  2008/01/04 12:26:08  mwilla
                                          257      - device list expanded
                                          258      - clock settings optimized
                                          259
                                          260      Revision 1.26  2007/10/17 11:53:34  mwilla
                                          261      - device list expanded
                                          262      - ICU initialization workaround added
                                          263      - sections settings grouped
                                          264
                                          265      Revision 1.25  2007/09/28 07:33:18  mwilla
                                          266      - Bug in BDM baudrate calculation corrected
                                          267
                                          268      Revision 1.24  2007/09/26 14:03:08  mwilla
                                          269      - Device list for MB96340 series updated and exp
                                                   anded
                                          270
                                          271      Revision 1.23  2007/08/06 14:48:16  mwilla
                                          272      - BDM section always reserved, filled with 0xFF,
                                                    if not configured
                                          273
                                          274      Revision 1.22  2007/08/02 08:34:03  mwilla
                                          275      - communication mode bits of BDM configuration g
                                                   rouped
                                          276
                                          277      Revision 1.21  2007/07/13 08:23:05  mwilla
                                          278      - device selection for BDM baud rate improved
                                          279
                                          280      Revision 1.20  2007/06/12 10:43:57  mwilla
                                          281      - BDM-Baud-Rate calculation includes crystal fre
                                                   quency
                                          282
                                          283      Revision 1.19  2007/06/06 07:46:55  mwilla
                                          284      - add Background Debugging Configuration
                                          285      - Stack initialization moved before variable ini
                                                   tialization
                                          286      - values of cystal frequency and device macros c
                                                   hanged
                                          287
                                          288      Revision 1.18  2007/04/16 07:56:02  phuene
                                          289      - update clock settings when crystal is 8 MHz so
                                                    that the CLKVCO is low
                                          290
                                          291      Revision 1.17  2007/04/10 11:30:43  phuene
                                          292      - add MB96320 Series
                                          293      - Clock settings optimized for CPU_8MHZ_CLKP2_8M
                                                   HZ, CPU_12MHZ_CLKP2_12MHZ, CPU_16MHZ_CLKP2_16MHZ
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  10
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                                   , CPU_24MHZ_CLKP2_24MHZ, CPU_32MHZ_CLKP2_32MHZ
                                          294      - make the selection for the individual devices
                                                   also consider the selected Series
                                          295      - support 8 MHz crystal
                                          296      - add clock setting CPU_32MHZ_CLKP1_16MHZ_CLKP2_
                                                   16MHZ
                                          297      - prohibit CPU_32MHZ_CLKP2_16MHZ, CPU_CLKP1_16MH
                                                   Z_CLKP2_16MHZ for MB96F348H and MB96F348T accord
                                                   ing to functional limitation 16FXFL0014
                                          298
                                          299      Revision 1.16  2007/02/07 12:38:10  phuene
                                          300      - support disabling the UART scanning in Interna
                                                   l Vector Mode
                                          301      - distinguish between Reset Vector and Boot Vect
                                                   or: the Boot Vector points to the start of the u
                                                   ser application
                                          302
                                          303      Revision 1.15  2007/02/07 09:00:19  phuene
                                          304      - add .SKIP instructions to occupy the whole ROM
                                                    configuration block area
                                          305
                                          306      Revision 1.14  2007/01/29 13:15:06  phuene
                                          307      - fix CPU_4MHZ_MAIN_CLKP2_4MHZ clock setting
                                          308
                                          309      Revision 1.13  2007/01/03 10:40:14  phuene
                                          310      - change clock setting CPU_24MHZ_CLKP2_16MHZ to
                                                   CPU_24MHZ_CLKP2_12MHZ; this allows for better pe
                                                   rformance of MB96F348H/T
                                          311      - use additional preprocessor statements to avoi
                                                   d checking for PLL ready twice in some cases
                                          312
                                          313      Revision 1.12  2007/01/02 10:16:20  phuene
                                          314      - correct CLKP2 (CAN) clock for CPU_32MHZ and MB
                                                   96F348H/T
                                          315      - correct CLKP2 (CAN) clock for CPU_24MHZ for al
                                                   l other devices than MB96F348H/T
                                          316
                                          317      Revision 1.11  2006/12/28 10:49:52  phuene
                                          318      - corrected PLL setting for CPU_16MHZ for MB9634
                                                   8H, MB96348T
                                          319
                                          320      Revision 1.10  2006/12/28 08:41:57  phuene
                                          321      - correct revision number at new location
                                          322
                                          323      Revision 1.1  2006/12/28 07:20:01  phuene
                                          324      - new location in CVS
                                          325
                                          326      Revision 1.9  2006/12/27 13:00:45  phuene
                                          327      - add support for ROM Mirror when using the Simu
                                                   lator
                                          328      - add support for 16FXFL0022, 16FXFL0023
                                          329
                                          330      Revision 1.8  2006/12/11 16:43:37  phuene
                                          331      - fix typo
                                          332
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  11
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                          333      Revision 1.7  2006/12/11 16:35:08  phuene
                                          334      - add setting for Clock Stabilization Times
                                          335      - modify clock settings:
                                          336        - CLKP2 < 28 MHz
                                          337        - remove clock settings using more wait cycles
                                                    than absolutely required
                                          338
                                          339      Revision 1.6  2006/11/03 13:38:45  phuene
                                          340      - modify clock settings to also set the Flash Me
                                                   mory Timing
                                          341      - add support for both parameter passing models
                                          342
                                          343      Revision 1.5  2006/08/07 14:01:44  phuene
                                          344      - change default clock setting to PLLx4 for CLKS
                                                   1, CLKS2
                                          345      - correct clock setting
                                          346      - disable Flash Security by default for Main Fla
                                                   sh, Satellite Flash
                                          347      - disable availability of Satellite Flash by def
                                                   ault
                                          348
                                          349      Revision 0.4  2006/08/07 15:35:35  phu
                                          350      - change default clock setting to PLLx4 for CLKS
                                                   1, CLKS2
                                          351      - correct clock setting
                                          352      - disable Flash Security by default for Main Fla
                                                   sh, Satellite Flash
                                          353      - disable availability of Satellite Flash by def
                                                   ault
                                          354
                                          355      Revision 0.3  2006/07/14 15:37:46  phu
                                          356      - add MB96350 Series
                                          357      - correct PIER settings for HRQ and RDY signals
                                          358
                                          359      Revision 0.2  2006/07/14 15:37:46  phu
                                          360      - include PIER settings for External Bus operati
                                                   on
                                          361
                                          362      Revision 0.1  2006/01/25 15:37:46  phu
                                          363      - initial version based on start.asm for MB90340
                                                    Series, version 3.8
                                          364      */
                                          365      ;===============================================
                                                   =====================
                                          366
                                          367      ;===============================================
                                                   =====================
                                          368      ; 4  Settings
                                          369      ;===============================================
                                                   =====================
                                          370      ;
                                          371      ; CHECK ALL OPTIONS WHETHER THEY FIT TO THE APPL
                                                   ICATION
                                          372      ;
                                          373      ; Configure this startup file in the "Settings"
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  12
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                                   section. Search for
                                          374      ; comments with leading "; <<<". This points to
                                                   the items to be set.
                                          375      ;===============================================
                                                   =====================
                                          376      #set      OFF       0
                                          377      #set      ON        1
                                          378
                                          379      ;===============================================
                                                   =====================
                                          380      ; 4.1   Controller Series, Device
                                          381      ;===============================================
                                                   =====================
                                          382
                                          383      #set      MB96310   310
                                          384      #set      MB96320   320
                                          385      #set      MB96330   330
                                          386      #set      MB96340   340
                                          387      #set      MB96350   350
                                          388      #set      MB96370   370
                                          389      #set      MB96380   380
                                          390      #set      MB96390   390
                                          391      #set      MB96910   910
                                          392
                                          393      #set      SERIES    MB96330        ; <<< select
                                                   Series
                                          394
                                          395
                                          396      ; Please specify the device according to the fol
                                                   lowing selection;
                                          397      ; x = {W, S}.
                                          398      ; Note: Do not change order because of device nu
                                                   mber dependency in
                                          399      ; 6.5 Clock settings, 5.9 Debug address specific
                                                   ation,
                                          400      ; and 6.11 ICU register initialization workaroun
                                                   d!
                                          401
                                          402      ; MB96310 series
                                          403      #set      MB96315RxA   1
                                          404      #set      MB96315AxA   2
                                          405      #set      MB96313RxA   3
                                          406      #set      MB96313AxA   4
                                          407
                                          408      ; MB96320 series
                                          409      #set      MB96326RxA   1
                                          410      #set      MB96326YxA   2
                                          411      #set      MB96326RxB   3
                                          412      #set      MB96326YxB   4
                                          413
                                          414      ; MB96330 series
                                          415      #set      MB96338RxA   1
                                          416      #set      MB96338UxA   2
                                          417      #set      MB96336UxA   3
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  13
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                          418
                                          419      ; MB96340 series
                                          420      #set      MB96348HxA   1
                                          421      #set      MB96348TxA   2
                                          422      #set      MB96346RxA   3
                                          423      #set      MB96346YxA   4
                                          424      #set      MB96346AxA   5
                                          425      #set      MB96347RxA   6
                                          426      #set      MB96347YxA   7
                                          427      #set      MB96347AxA   8
                                          428      #set      MB96348RxA   9
                                          429      #set      MB96348YxA  10
                                          430      #set      MB96348AxA  11
                                          431      #set      MB96346RxB  12
                                          432      #set      MB96346AxB  13
                                          433      #set      MB96346YxB  14
                                          434      #set      MB96347RxB  15
                                          435      #set      MB96347AxB  16
                                          436      #set      MB96347YxB  17
                                          437      #set      MB96348CxA  18
                                          438      #set      MB96348HxB  19
                                          439      #set      MB96348TxB  20
                                          440      #set      MB96348RxB  21
                                          441      #set      MB96348AxB  22
                                          442      #set      MB96348YxB  23
                                          443      #set      MB96348CxC  24
                                          444      #set      MB96348HxC  25
                                          445      #set      MB96348TxC  26
                                          446      #set      MB96345DxA  27
                                          447
                                          448      ; MB96350 series
                                          449      #set      MB96356RxA   1
                                          450      #set      MB96356YxA   2
                                          451      #set      MB96355RxA   3
                                          452      #set      MB96356RxB   4
                                          453      #set      MB96356YxB   5
                                          454      #set      MB96355AxA   6
                                          455      #set      MB96353RxA   7
                                          456      #set      MB96353AxA   8
                                          457      #set      MB96355RxB   9
                                          458
                                          459      ; MB96370 series
                                          460      #set      MB96379RxA   1
                                          461      #set      MB96379YxA   2
                                          462      #set      MB96379RxB   3
                                          463      #set      MB96378HxB   4
                                          464
                                          465      ; MB96380 series
                                          466      #set      MB96384RxA   1
                                          467      #set      MB96384YxA   2
                                          468      #set      MB96385RxA   3
                                          469      #set      MB96385YxA   4
                                          470      #set      MB96386RxA   5
                                          471      #set      MB96386YxA   6
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  14
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                          472      #set      MB96387RxA   7
                                          473      #set      MB96387YxA   8
                                          474      #set      MB96386RxB   9
                                          475      #set      MB96386YxB  10
                                          476      #set      MB96387RxB  11
                                          477      #set      MB96387YxB  12
                                          478      #set      MB96388HxB  13
                                          479      #set      MB96389RxB  14
                                          480
                                          481      ; MB96390 series
                                          482      #set      MB96395RxA   1
                                          483
                                          484      ; MB96910 series
                                          485      #set      MB96918DxA   1
                                          486
                                          487
                                          488      #set      DEVICE    MB96338UxA      ; <<< select
                                                    device
                                          489
                                          490      ;===============================================
                                                   =====================
                                          491      ; 4.2   C-language Memory model
                                          492      ;===============================================
                                                   =====================
                                          493
                                          494                                         ;      data
                                                       code
                                          495      #set      SMALL     0              ;     16 Bit
                                                      16 Bit
                                          496      #set      MEDIUM    1              ;     16 Bit
                                                      24 Bit
                                          497      #set      COMPACT   2              ;     24 Bit
                                                      16 Bit
                                          498      #set      LARGE     3              ;     24 Bit
                                                      24 Bit
                                          499      #set      AUTOMODEL 4              ; works alway
                                                   s, might occupy two
                                          500                                         ; additional
                                                   bytes
                                          501
                                          502
                                          503      #set      MEMMODEL  AUTOMODEL      ; <<< C-memor
                                                   y model
                                          504
                                          505      ; The selected memory model should be set in ord
                                                   er to fit to the
                                          506      ; model selected for the compiler.
                                          507      ; Note, in this startup version AUTOMODEL will w
                                                   ork for all
                                          508      ; C-models. However, if the compiler is configur
                                                   ed for SMALL or
                                          509      ; COMPACT, two additional bytes on stack are occ
                                                   upied. If this is not
                                          510      ; acceptable, the above setting should be set to
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  15
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                                    the correct model.
                                          511
                                          512      ;===============================================
                                                   =====================
                                          513      ; 4.3   Function-Call Interface
                                          514      ;===============================================
                                                   =====================
                                          515
                                          516                #if __REG_PASS__
                                          517   X              .REG_PASS
                                          518                #endif
                                          519
                                          520      ; Above statement informs Assembler on compatibi
                                                   lity of start-up code
                                          521      ; to  Function Call Interface  as selected for t
                                                   he application. There
                                          522      ; is nothing to configure.
                                          523      ; The Function-Call Interface specifies the meth
                                                   od of passing parame-
                                          524      ; ter from function caller to callee.  The stand
                                                   ard method of FCC907S
                                          525      ; compiler  uses  "stack argument passing".  Alt
                                                   ernatively,  language
                                          526      ; tools can be configured for "register argument
                                                    passing".
                                          527      ; For details see the compiler manual.
                                          528      ; This start-up file is compatible to both inter
                                                   faces.
                                          529
                                          530      ;===============================================
                                                   =====================
                                          531      ; 4.4   Constant Data Handling
                                          532      ;===============================================
                                                   =====================
                                          533
                                          534      #set      ROMCONST    0            ; works only
                                                   with compiler ROMCONST
                                          535      #set      RAMCONST    1            ; works with
                                                   BOTH compiler settings
                                          536      #set      AUTOCONST   RAMCONST     ; works with
                                                   BOTH compiler settings
                                          537
                                          538      #set      CONSTDATA   AUTOCONST    ; <<< set RAM
                                                   /ROM/AUTOCONST
                                          539
                                          540      ; - AUTOCONST (default) is the same as RAMCONST
                                          541      ; - RAMCONST/AUTOCONST should always work, even
                                                   if compiler is set to
                                          542      ;   ROMCONST. If compiler is set to ROMCONST and
                                                    this startup file is
                                          543      ;   set to RAMCONST or AUTOCONST, this startup f
                                                   ile will generate an
                                          544      ;   empty section CINIT in RAM. However, the cod
                                                   e, which copies from
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  16
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                          545      ;   CONST to CINIT will not have any effect, bec
                                                   ause size of section is 0.
                                          546      ; - It is highly recommended to set the compiler
                                                    to ROMCONST for
                                          547      ;   single-chip mode or internal ROM+ext bus. Th
                                                   e start-up file
                                          548      ;   should be set to AUTOCONST.
                                          549      ; - ROMCONST setting on systems with full extern
                                                   al bus requires exter-
                                          550      ;   nal address mapping.
                                          551      ;   Single-chip can be emulated by the emulator
                                                   debugger.
                                          552      ;   ROM mirror can also be used with simulator.
                                          553      ;
                                          554      ; see also ROM MIRROR options
                                          555
                                          556      ;===============================================
                                                   =====================
                                          557      ; 4.5   Stack Type and Stack Size
                                          558      ;===============================================
                                                   =====================
                                          559
                                          560      #set      USRSTACK       0      ; user stack: fo
                                                   r main program
                                          561      #set      SYSSTACK       1      ; system stack:
                                                   for main program and interrupts
                                          562
                                          563      #set      STACKUSE  SYSSTACK    ; <<< set active
                                                    stack
                                          564
                                          565      #set      STACK_RESERVE  ON     ; <<< reserve st
                                                   ack area in this module
                                          566      #set      STACK_SYS_SIZE 768    ; <<< byte size
                                                   of System stack
                                          567      #set      STACK_USR_SIZE 2      ; <<< byte size
                                                   of User stack
                                          568
                                          569      #set      STACK_FILL     ON     ; <<< fills the
                                                   stack area with pattern
                                          570      #set      STACK_PATTERN  0x55AA ; <<< the patter
                                                   n to write to stack
                                          571
                                          572      ; - If the active stack is set to SYSSTACK, it i
                                                   s used for main program
                                          573      ;   and interrupts. In this case, the user stack
                                                    can be set to a dummy
                                          574      ;   size.
                                          575      ;   If the active stack is set to user stack, it
                                                    is used for the main
                                          576      ;   program but the system stack is automaticall
                                                   y activated, if an inter-
                                          577      ;   rupt is serviced. Both stack areas must have
                                                    a reasonable size.
                                          578      ; - If STACK_RESERVE is ON, the sections USTACK
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  17
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                                   and SSTACK are reserved
                                          579      ;   in this module. Otherwise, they have to be r
                                                   eserved in other modules.
                                          580      ;   If STACK_RESERVE is OFF, the size definition
                                                   s STACK_SYS_SIZE and
                                          581      ;   STACK_USR_SIZE have no meaning.
                                          582      ; - Even if they are reserved in other modules,
                                                   they are still initialised
                                          583      ;   in this start-up file.
                                          584      ; - Filling the stack with a pattern allows to d
                                                   ynamically check the stack
                                          585      ;   area, which had already been used.
                                          586      ;
                                          587      ; - If only system stack is used and SSB is link
                                                   ed to a different bank
                                          588      ;   than USB, make sure that all C-modules (whic
                                                   h generate far pointers
                                          589      ;   to stack data) have "#pragma SSB". Applies o
                                                   nly to exclusive confi-
                                          590      ;   gurations.
                                          591      ; - Note, several library functions require quit
                                                   e a big stack (due to
                                          592      ;   ANSI). Check the stack information files (*.
                                                   stk) in the LIB\907
                                          593      ;   directory.
                                          594
                                          595      ;===============================================
                                                   =====================
                                          596      ; 4.6   General Register Bank
                                          597      ;===============================================
                                                   =====================
                                          598
                                          599      #set      REGBANK   0           ; <<< set defaul
                                                   t register bank
                                          600
                                          601      ; set the General Register Bank that is to be us
                                                   ed after startup.
                                          602      ; Usually, this is bank 0, which applies to addr
                                                   ess H'180..H'18F. Set
                                          603      ; in the range from 0 to 31.
                                          604      ; Note: All used register banks have to be reser
                                                   ved (linker options).
                                          605
                                          606      #if REGBANK > 31 || REGBANK < 0
                                          607   X  #  error REGBANK setting out of range
                                          608      #endif
                                          609
                                          610      ;===============================================
                                                   =====================
                                          611      ; 4.7   Low-Level Library Interface
                                          612      ;===============================================
                                                   =====================
                                          613
                                          614      #set      CLIBINIT       OFF    ; <<< select ext
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  18
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                                   ended library usage
                                          615
                                          616      ; This option has only to be set, if stream-IO/s
                                                   tandard-IO function of
                                          617      ; the C-library have to be used (printf(), fopen
                                                   ()...). This also
                                          618      ; requires low-level functions to be defined by
                                                   the application
                                          619      ; software.
                                          620      ; For other library functions (like e.g. sprintf
                                                   ()) all this is not
                                          621      ; necessary. However, several functions consume
                                                   a large amount of stack.
                                          622
                                          623      ;===============================================
                                                   =====================
                                          624      ; 4.8   Clock Selection
                                          625      ;===============================================
                                                   =====================
                                          626
                                          627      ; The clock selection requires that a 4 MHz or 8
                                                    MHz external clock
                                          628      ; is provided as the Main Clock. If a different
                                                   frequency is used,
                                          629      ; the Flash Memory Timing settings must be check
                                                   ed!
                                          630
                                          631      #set      CLOCKWAIT      ON     ; <<<  wait for
                                                   stabilized clock, if
                                          632                                      ;      Main Cloc
                                                   k or PLL is used
                                          633
                                          634      ; The clock is set quite early. However, if CLOC
                                                   KWAIT is ON, polling
                                          635      ; for machine clock to be switched to Main Clock
                                                    or PLL is done at
                                          636      ; the end of this file. Therefore, the stabiliza
                                                   tion time is not
                                          637      ; wasted. Main() will finally start at correct s
                                                   peed. Resources can
                                          638      ; be used immediately.
                                          639      ; Note: If CLOCKWAIT is switched off, Flash timi
                                                   ng settings may
                                          640      ; be set to a value that is slower than optimal.
                                          641      ;
                                          642      ; This startup file version does not support sub
                                                   clock.
                                          643
                                          644      #set      FREQ_4MHZ       D'4000000L
                                          645      #set      FREQ_8MHZ       D'8000000L
                                          646      #set      FREQ_16MHZ      D'16000000L
                                          647
                                          648      #set      CRYSTAL         FREQ_4MHZ  ; <<< selec
                                                   t external crystal frequency
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  19
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                          649
                                          650      #set      CPU_4MHZ_MAIN_CLKP2_4MHZ            0x
                                                   00000000L
                                          651      #set      CPU_4MHZ_PLL_CLKP2_4MHZ             0x
                                                   04040404L
                                          652      #set      CPU_8MHZ_CLKP2_8MHZ                 0x
                                                   08080808L
                                          653      #set      CPU_12MHZ_CLKP2_12MHZ               0x
                                                   0C0C0C0CL
                                          654      #set      CPU_16MHZ_CLKP2_16MHZ               0x
                                                   10101010L
                                          655      #set      CPU_24MHZ_CLKP2_12MHZ               0x
                                                   18180C18L
                                          656      #set      CPU_24MHZ_CLKP2_16MHZ               0x
                                                   18181018L
                                          657      #set      CPU_24MHZ_CLKP2_24MHZ               0x
                                                   18181818L
                                          658      #set      CPU_32MHZ_CLKP2_16MHZ               0x
                                                   20201020L
                                          659      #set      CPU_32MHZ_CLKP1_16MHZ_CLKP2_16MHZ   0x
                                                   20101020L
                                          660      #set      CPU_40MHZ_CLKP2_16MHZ               0x
                                                   28281028L
                                          661      #set      CPU_48MHZ_CLKP2_16MHZ               0x
                                                   30301030L
                                          662      #set      CPU_48MHZ_CLKP1_32MHZ_CLKP2_16MHZ   0x
                                                   30201030L
                                          663      #set      CPU_48MHZ_CLKP1_24MHZ_CLKP2_16MHZ   0x
                                                   30181030L
                                          664      #set      CPU_48MHZ_CLKP1_16MHZ_CLKP2_16MHZ   0x
                                                   30101030L
                                          665      #set      CPU_48MHZ_CLKP1_16MHZ_CLKP2_CLKP3_MAIN
                                                     0x30100030L
                                          666      #set      CPU_56MHZ_CLKP2_8MHZ                0x
                                                   38380838L
                                          667      #set      CPU_56MHZ_CLKP2_14MHZ               0x
                                                   38380E38L
                                          668
                                          669      #set      CLOCK_SPEED     CPU_48MHZ_CLKP2_16MHZ
                                                    ; <<< set clock speeds
                                          670
                                          671      ; If not specified seperately, the peripheral cl
                                                   ock CLKP1 is set to
                                          672      ; the same frequency as the CPU.
                                          673      ; The peripheral clock CLKP2 has its setting. Th
                                                   is is because it
                                          674      ; feeds only the CAN controllers and Sound Gener
                                                   ators. These do not
                                          675      ; need high frequency clocks.
                                          676      ; If available CLKP3 is set to the same frequenc
                                                   y as the CPU.
                                          677
                                          678      #set      WAIT_STATE_OPTIMIZATION  2
                                          679      #set      LOW_PLL_OPTIMIZATION     1
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  20
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                          680
                                          681      #set      CLOCK_OPTIMIZATION   WAIT_STATE_OPTIMI
                                                   ZATION ; <<< set clock optimization mode
                                          682
                                          683      ; For some clock settings there are several poss
                                                   ible frequency settings
                                          684      ; for the internal PLL. These settings can have
                                                   impact on the flash
                                          685      ; wait state settings (execution speed) as well
                                                   as the power consumption.
                                          686      ;
                                          687      ; If "WAIT_STATE_OPTIMIZATION" is selected, a PL
                                                   L setting with minimum
                                          688      ; flash wait states is applied. This can increas
                                                   e performance. Note that
                                          689      ; "WAIT_STATE_OPTIMIZATION" is not supported for
                                                    some combinations of
                                          690      ; devices and clock settings. If the setting is
                                                   not supported, a
                                          691      ; pre-processor error will be generated.
                                          692      ;
                                          693      ; If "LOW_PLL_OPTIMIZATION" is selected, a PLL s
                                                   etting with minimum
                                          694      ; internal frequency is applied. This can decrea
                                                   se power consumption.
                                          695      ; Note that "LOW_PLL_OPTIMIZATION" is supported
                                                   for all combinations of
                                          696      ; devices and clock settings that allow the give
                                                   n external clock settings.
                                          697
                                          698
                                          699      ; Note: The settings for CRYSTAL, CLOCK_SPEED an
                                                   d CLOCK_OPTIMIZATION
                                          700      ; may affect the PLL configuration, system clock
                                                   s, clock dividers,
                                          701      ; flash timing settings and background debugging
                                                    settings of the MCU
                                          702      ; to achieve the selected clock speeds.
                                          703      ; The clock control registers and flash timing r
                                                   egisters (see MB96300_HWM)
                                          704      ; will most probably be set to values other than
                                                    their default.
                                          705      ;
                                          706      ; Attention: When changing clocks during applica
                                                   tion runtime (inside
                                          707      ; main() ) please take care for flash timing set
                                                   tings as well, as the
                                          708      ; flash timing settings generated in start.asm m
                                                   ay have minimum
                                          709      ; and/or maximum ranges for System Clock 1 (CLKS
                                                   1) and Bus Clock
                                          710      ; (CLKB). Please also take care that background
                                                   debugging may fail
                                          711      ; when the clock settings are altered during app
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  21
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                                   lication runtime (inside
                                          712      ; main() ).
                                          713
                                          714      ;===============================================
                                                   =====================
                                          715      ; 4.9   Clock Stabilization Time
                                          716      ;===============================================
                                                   =====================
                                          717
                                          718      ; Main clock stabilization time is given in cloc
                                                   k cycles, where
                                          719      ; MC_2_X_CYCLES means 2 to power of X cycles.
                                          720
                                          721      #set      MC_2_10_CYCLES   0
                                          722      #set      MC_2_12_CYCLES   1
                                          723      #set      MC_2_13_CYCLES   2
                                          724      #set      MC_2_14_CYCLES   3
                                          725      #set      MC_2_15_CYCLES   4
                                          726      #set      MC_2_16_CYCLES   5
                                          727      #set      MC_2_17_CYCLES   6
                                          728      #set      MC_2_18_CYCLES   7
                                          729
                                          730      #set      MC_STAB_TIME     MC_2_15_CYCLES ; <<<
                                                   select Main Clock Stabilization Time
                                          731
                                          732      ;===============================================
                                                   =====================
                                          733      ; 4.10  External Bus Interface
                                          734      ;===============================================
                                                   =====================
                                          735
                                          736      #set      SINGLE_CHIP     0        ; all interna
                                                   l
                                          737      #set      INTROM_EXTBUS   1        ; mask ROM or
                                                    FLASH memory used
                                          738      #set      EXTROM_EXTBUS   2        ; full extern
                                                   al bus (INROM not used)
                                          739
                                          740      #set      BUSMODE SINGLE_CHIP      ; <<< set bus
                                                    mode (see mode pins)
                                          741
                                          742      #set      MULTIPLEXED     0        ;
                                          743      #set      NON_MULTIPLEXED 1        ; only if sup
                                                   ported by the device
                                          744
                                          745      #set      ADDRESSMODE MULTIPLEXED  ; <<< set add
                                                   ress-mode
                                          746
                                          747      ; Some devices support multiplexed and/or non-mu
                                                   ltiplexed Bus mode
                                          748      ; please refer to the related datasheet/hardware
                                                   manual
                                          749
                                          750
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  22
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                          751      ; If BUSMODE is "SINGLE_CHIP", ignore remaining
                                                   bus settings.
                                          752
                                          753      ; Select the used Chip Select areas
                                          754      #set      CHIP_SELECT0       OFF   ; <<< enable
                                                   chip select area
                                          755      #set      CHIP_SELECT1       OFF   ; <<< enable
                                                   chip select area
                                          756      #set      CHIP_SELECT2       OFF   ; <<< enable
                                                   chip select area
                                          757      #set      CHIP_SELECT3       OFF   ; <<< enable
                                                   chip select area
                                          758      #set      CHIP_SELECT4       OFF   ; <<< enable
                                                   chip select area
                                          759      #set      CHIP_SELECT5       OFF   ; <<< enable
                                                   chip select area
                                          760
                                          761      #set      HOLD_REQ           OFF   ; <<< select
                                                   Hold function
                                          762      #set      EXT_READY          OFF   ; <<< select
                                                   external Ready function
                                          763      #set      EXT_CLOCK_ENABLE   OFF   ; <<< select
                                                   external bus clock output
                                          764      #set      EXT_CLOCK_INVERT   OFF   ; <<< select
                                                   clock inversion
                                          765      #set      EXT_CLOCK_SUSPEND  OFF   ; <<< select
                                                   if external clock is suspended when no transfer
                                                   in progress
                                          766
                                          767      ; The external bus clock is derived from core cl
                                                   ock CLKB. Select the divider for the external bu
                                                   s clock.
                                          768
                                          769      #set      EXT_CLOCK_DIV1     0
                                          770      #set      EXT_CLOCK_DIV2     1
                                          771      #set      EXT_CLOCK_DIV4     2
                                          772      #set      EXT_CLOCK_DIV8     3
                                          773      #set      EXT_CLOCK_DIV16    4
                                          774      #set      EXT_CLOCK_DIV32    5
                                          775      #set      EXT_CLOCK_DIV64    6
                                          776      #set      EXT_CLOCK_DIV128   7
                                          777
                                          778      #set      EXT_CLOCK_DIVISION  EXT_CLOCK_DIV1 ; <
                                                   << select clock divider
                                          779
                                          780      #set      ADDR_PINS_23_16    B'00000000     ; <<
                                                   < select used address lines
                                          781                                                  ;
                                                     A23..A16 to be output.
                                          782      #set      ADDR_PINS_15_8     B'00000000     ; <<
                                                   < select used address lines
                                          783                                                  ;
                                                     A15..A8 to be output.
                                          784      #set      ADDR_PINS_7_0      B'00000000     ; <<
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  23
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                                   < select used address lines
                                          785                                                  ;
                                                     A7..A0 to be output.
                                          786
                                          787      #set      LOW_BYTE_SIGNAL    OFF   ; <<< select
                                                   low byte signal LBX
                                          788      #set      HIGH_BYTE_SIGNAL   OFF   ; <<< select
                                                   high byte signal UBX
                                          789      #set      LOW_WRITE_STROBE   OFF   ; <<< select
                                                   write strobe signal WRLX/WRX
                                          790      #set      HIGH_WRITE_STROBE  OFF   ; <<< select
                                                   write strobe signal WRHX
                                          791      #set      READ_STROBE        OFF   ; <<< select
                                                   read strobe signal RDX
                                          792      #set      ADDRESS_STROBE     OFF   ; <<< select
                                                   address strobe signal ALE/ASX
                                          793      #set      ADDRESS_STROBE_LVL OFF   ; <<< select
                                                   address strobe function: OFF - active low; ON -
                                                   active high
                                          794
                                          795
                                          796      #set      CS0_CONFIG  B'0000000000000000    ; <<
                                                   < select Chip Select Area 0 configuration
                                          797      ;                       |||||||||||||+++-- Autom
                                                   atic wait cycles (0: 0, 1: 1, 2: 2, 3: 3, 4: 4,
                                                   5: 8, 6: 16, 7: 32)
                                          798      ;                       ||||||||||||+----- Addre
                                                   ss Cycle Extension (0: not extended, 1: extensio
                                                   n by 1 cycle)
                                          799      ;                       |||||||||||+------ Strob
                                                   e timing (0: scheme 0, 1: scheme 1)
                                          800      ;                       ||||||||||+------- Write
                                                    strobe function (0: WRLX strobe, 1: WRX strobe)
                                          801      ;                       |||||||||+-------- Endia
                                                   ness (0: little endian, 1: big endian)
                                          802      ;                       ||||||||+--------- Bus w
                                                   idth (0: 16bit, 1: 8bit)
                                          803      ;                       |||||+++---------- ignor
                                                   ed
                                          804      ;                       ||||+------------- Chip
                                                   Select output enable (0: CS disabled, 1: CS enab
                                                   led)
                                          805      ;                       |||+-------------- Chip
                                                   Select level (0: low active, 1: high active)
                                          806      ;                       ||+--------------- Acces
                                                   s type limitation (0: code and data, 1: data onl
                                                   y)
                                          807      ;                       ++---------------- ignor
                                                   ed
                                          808
                                          809      #set      CS1_CONFIG  B'0000000000000000    ; <<
                                                   < select Chip Select Area 1 configuration
                                          810      ;                       |||||||||||||+++-- Autom
                                                   atic wait cycles (0: 0, 1: 1, 2: 2, 3: 3, 4: 4,
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  24
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                                   5: 8, 6: 16, 7: 32)
                                          811      ;                       ||||||||||||+----- Addre
                                                   ss Cycle Extension (0: not extended, 1: extensio
                                                   n by 1 cycle)
                                          812      ;                       |||||||||||+------ Strob
                                                   e timing (0: scheme 0, 1: scheme 1)
                                          813      ;                       ||||||||||+------- Write
                                                    strobe function (0: WRLX strobe, 1: WRX strobe)
                                          814      ;                       |||||||||+-------- Endia
                                                   ness (0: little endian, 1: big endian)
                                          815      ;                       ||||||||+--------- Bus w
                                                   idth (0: 16bit, 1: 8bit)
                                          816      ;                       |||||+++---------- ignor
                                                   ed
                                          817      ;                       ||||+------------- Chip
                                                   Select output enable (0: CS disabled, 1: CS enab
                                                   led)
                                          818      ;                       |||+-------------- Chip
                                                   Select level (0: low active, 1: high active)
                                          819      ;                       ||+--------------- Acces
                                                   s type limitation (0: code and data, 1: data onl
                                                   y)
                                          820      ;                       ++---------------- ignor
                                                   ed
                                          821
                                          822      #set      CS2_CONFIG  B'0000011000000000    ; <<
                                                   < select Chip Select Area 2 configuration
                                          823      ;                       |||||||||||||+++-- Autom
                                                   atic wait cycles (0: 0, 1: 1, 2: 2, 3: 3, 4: 4,
                                                   5: 8, 6: 16, 7: 32)
                                          824      ;                       ||||||||||||+----- Addre
                                                   ss Cycle Extension (0: not extended, 1: extensio
                                                   n by 1 cycle)
                                          825      ;                       |||||||||||+------ Strob
                                                   e timing (0: scheme 0, 1: scheme 1)
                                          826      ;                       ||||||||||+------- Write
                                                    strobe function (0: WRLX strobe, 1: WRX strobe)
                                          827      ;                       |||||||||+-------- Endia
                                                   ness (0: little endian, 1: big endian)
                                          828      ;                       ||||||||+--------- Bus w
                                                   idth (0: 16bit, 1: 8bit)
                                          829      ;                       |||||+++---------- Exter
                                                   nal area size (0: 64kB, 1: 128kB, 2: 256kB, 3: 5
                                                   12kB, 4: 1MB, 5: 2MB, 6: 4MB, 7: 8MB)
                                          830      ;                       ||||+------------- Chip
                                                   Select output enable (0: CS disabled, 1: CS enab
                                                   led)
                                          831      ;                       |||+-------------- Chip
                                                   Select level (0: low active, 1: high active)
                                          832      ;                       ||+--------------- Acces
                                                   s type limitation (0: code and data, 1: data onl
                                                   y)
                                          833      ;                       ++---------------- ignor
                                                   ed
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  25
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                          834
                                          835      #set      CS3_CONFIG  B'0000011000000000    ; <<
                                                   < select Chip Select Area 3 configuration
                                          836      ;                       |||||||||||||+++-- Autom
                                                   atic wait cycles (0: 0, 1: 1, 2: 2, 3: 3, 4: 4,
                                                   5: 8, 6: 16, 7: 32)
                                          837      ;                       ||||||||||||+----- Addre
                                                   ss Cycle Extension (0: not extended, 1: extensio
                                                   n by 1 cycle)
                                          838      ;                       |||||||||||+------ Strob
                                                   e timing (0: scheme 0, 1: scheme 1)
                                          839      ;                       ||||||||||+------- Write
                                                    strobe function (0: WRLX strobe, 1: WRX strobe)
                                          840      ;                       |||||||||+-------- Endia
                                                   ness (0: little endian, 1: big endian)
                                          841      ;                       ||||||||+--------- Bus w
                                                   idth (0: 16bit, 1: 8bit)
                                          842      ;                       |||||+++---------- Exter
                                                   nal area size (0: 64kB, 1: 128kB, 2: 256kB, 3: 5
                                                   12kB, 4: 1MB, 5: 2MB, 6: 4MB, 7: 8MB)
                                          843      ;                       ||||+------------- Chip
                                                   Select output enable (0: CS disabled, 1: CS enab
                                                   led)
                                          844      ;                       |||+-------------- Chip
                                                   Select level (0: low active, 1: high active)
                                          845      ;                       ||+--------------- Acces
                                                   s type limitation (0: code and data, 1: data onl
                                                   y)
                                          846      ;                       ++---------------- ignor
                                                   ed
                                          847
                                          848      #set      CS4_CONFIG  B'0000011000000000    ; <<
                                                   < select Chip Select Area 4 configuration
                                          849      ;                       |||||||||||||+++-- Autom
                                                   atic wait cycles (0: 0, 1: 1, 2: 2, 3: 3, 4: 4,
                                                   5: 8, 6: 16, 7: 32)
                                          850      ;                       ||||||||||||+----- Addre
                                                   ss Cycle Extension (0: not extended, 1: extensio
                                                   n by 1 cycle)
                                          851      ;                       |||||||||||+------ Strob
                                                   e timing (0: scheme 0, 1: scheme 1)
                                          852      ;                       ||||||||||+------- Write
                                                    strobe function (0: WRLX strobe, 1: WRX strobe)
                                          853      ;                       |||||||||+-------- Endia
                                                   ness (0: little endian, 1: big endian)
                                          854      ;                       ||||||||+--------- Bus w
                                                   idth (0: 16bit, 1: 8bit)
                                          855      ;                       |||||+++---------- Exter
                                                   nal area size (0: 64kB, 1: 128kB, 2: 256kB, 3: 5
                                                   12kB, 4: 1MB, 5: 2MB, 6: 4MB, 7: 8MB)
                                          856      ;                       ||||+------------- Chip
                                                   Select output enable (0: CS disabled, 1: CS enab
                                                   led)
                                          857      ;                       |||+-------------- Chip
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  26
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                                   Select level (0: low active, 1: high active)
                                          858      ;                       ||+--------------- Acces
                                                   s type limitation (0: code and data, 1: data onl
                                                   y)
                                          859      ;                       ++---------------- ignor
                                                   ed
                                          860
                                          861      #set      CS5_CONFIG  B'0000011000000000    ; <<
                                                   < select Chip Select Area 5 configuration
                                          862      ;                       |||||||||||||+++-- Autom
                                                   atic wait cycles (0: 0, 1: 1, 2: 2, 3: 3, 4: 4,
                                                   5: 8, 6: 16, 7: 32)
                                          863      ;                       ||||||||||||+----- Addre
                                                   ss Cycle Extension (0: not extended, 1: extensio
                                                   n by 1 cycle)
                                          864      ;                       |||||||||||+------ Strob
                                                   e timing (0: scheme 0, 1: scheme 1)
                                          865      ;                       ||||||||||+------- Write
                                                    strobe function (0: WRLX strobe, 1: WRX strobe)
                                          866      ;                       |||||||||+-------- Endia
                                                   ness (0: little endian, 1: big endian)
                                          867      ;                       ||||||||+--------- Bus w
                                                   idth (0: 16bit, 1: 8bit)
                                          868      ;                       |||||+++---------- Exter
                                                   nal area size (0: 64kB, 1: 128kB, 2: 256kB, 3: 5
                                                   12kB, 4: 1MB, 5: 2MB, 6: 4MB, 7: 8MB)
                                          869      ;                       ||||+------------- Chip
                                                   Select output enable (0: CS disabled, 1: CS enab
                                                   led)
                                          870      ;                       |||+-------------- Chip
                                                   Select level (0: low active, 1: high active)
                                          871      ;                       ||+--------------- Acces
                                                   s type limitation (0: code and data, 1: data onl
                                                   y)
                                          872      ;                       ++---------------- ignor
                                                   ed
                                          873
                                          874
                                          875      #set      CS2_START  0x00       ; <<< select sta
                                                   rt bank of chip select area; valid values: 0x00.
                                                   .0xFF
                                          876      #set      CS3_START  0x40       ; <<< select sta
                                                   rt bank of chip select area; valid values: 0x00.
                                                   .0xFF
                                          877      #set      CS4_START  0x80       ; <<< select sta
                                                   rt bank of chip select area; valid values: 0x00.
                                                   .0xFF
                                          878      #set      CS5_START  0xC0       ; <<< select sta
                                                   rt bank of chip select area; valid values: 0x00.
                                                   .0xFF
                                          879
                                          880
                                          881      ;===============================================
                                                   =====================
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  27
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                          882      ; 4.11  ROM Mirror configuration
                                          883      ;===============================================
                                                   =====================
                                          884
                                          885      #set      MIRROR_8KB    0
                                          886      #set      MIRROR_16KB   1
                                          887      #set      MIRROR_24KB   2
                                          888      #set      MIRROR_32KB   3
                                          889
                                          890      #set      ROMMIRROR     ON          ; <<< ROM mi
                                                   rror function ON/OFF
                                          891      #set      MIRROR_BANK   0xF         ; <<< ROM Mi
                                                   rror bank, allowed entries: 0x0..0xF for the ban
                                                   ks 0xF0..0xFF
                                          892      #set      MIRROR_SIZE   MIRROR_32KB ; <<< ROM Mi
                                                   rror size
                                          893
                                          894      ; One can select which ROM area to mirror into t
                                                   he upper half of bank 00.
                                          895      ; If ROMMIRROR = OFF is selected, the address ra
                                                   nge 0x008000..0x00FFFF
                                          896      ; shows the contents of the respective area of b
                                                   ank 1: 0x018000..0x01FFFF.
                                          897      ; If ROMMIRROR = ON is selected, the memory bank
                                                    to mirror can be selected.
                                          898      ; Available banks are 0xF0 to 0xFF. Furthermore,
                                                    the ROM Mirror area size can
                                          899      ; be selected. 4 sizes are available: 8 kB, 16 k
                                                   B, 24 kB, or 32 kB. The ROM Mirror
                                          900      ; from the highest address of the selected bank
                                                   downwards, e.g. if bank 0xFF and
                                          901      ; mirror size 24 kB is selected, the memory rang
                                                   e 0xFFA000..0xFFFFFF is mirrored
                                          902      ; to address range 0x00A000..0x00FFFF. The memor
                                                   y area not selected for
                                          903      ; ROM Mirror is still mirrored from bank 0x01.
                                          904      ; This is necessary to get the compiler ROMCONST
                                                    option working. This is intended
                                          905      ; to increase performance, if a lot of dynamic d
                                                   ata have to be accessed.
                                          906      ; In SMALL and MEDIUM model these data can be ac
                                                   cessed within bank 0,
                                          907      ; which allows to use near addressing. Please ma
                                                   ke sure to have the linker
                                          908      ; setting adjusted accordingly!
                                          909
                                          910
                                          911      ;===============================================
                                                   =====================
                                          912      ; 4.12  Flash Security
                                          913      ;===============================================
                                                   =====================
                                          914      ; All settings regarding Flash B are ignored on
                                                   devices that do not
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  28
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                          915      ; have a Flash B.
                                          916
                                          917      #set      FLASH_A_SECURITY_ENABLE     OFF ; <<<
                                                   enable Flash Security for Flash A (old "Main Fla
                                                   sh")
                                          918      #set      FLASH_B_SECURITY_ENABLE     OFF ; <<<
                                                   enable Flash Security for Flash B (old "Satellit
                                                   e Flash")
                                          919      #set      DATAFLASH_A_SECURITY_ENABLE OFF ; <<<
                                                   enable Flash Security for DataFlash A
                                          920
                                          921      ; set the Flash Security unlock key (16 bytes)
                                          922      ; all 0: unlock not possible
                                          923      #set      FLASH_A_UNLOCK_0           0x00
                                          924      #set      FLASH_A_UNLOCK_1           0x00
                                          925      #set      FLASH_A_UNLOCK_2           0x00
                                          926      #set      FLASH_A_UNLOCK_3           0x00
                                          927      #set      FLASH_A_UNLOCK_4           0x00
                                          928      #set      FLASH_A_UNLOCK_5           0x00
                                          929      #set      FLASH_A_UNLOCK_6           0x00
                                          930      #set      FLASH_A_UNLOCK_7           0x00
                                          931      #set      FLASH_A_UNLOCK_8           0x00
                                          932      #set      FLASH_A_UNLOCK_9           0x00
                                          933      #set      FLASH_A_UNLOCK_10          0x00
                                          934      #set      FLASH_A_UNLOCK_11          0x00
                                          935      #set      FLASH_A_UNLOCK_12          0x00
                                          936      #set      FLASH_A_UNLOCK_13          0x00
                                          937      #set      FLASH_A_UNLOCK_14          0x00
                                          938      #set      FLASH_A_UNLOCK_15          0x00
                                          939
                                          940      #set      FLASH_B_UNLOCK_0           0x00
                                          941      #set      FLASH_B_UNLOCK_1           0x00
                                          942      #set      FLASH_B_UNLOCK_2           0x00
                                          943      #set      FLASH_B_UNLOCK_3           0x00
                                          944      #set      FLASH_B_UNLOCK_4           0x00
                                          945      #set      FLASH_B_UNLOCK_5           0x00
                                          946      #set      FLASH_B_UNLOCK_6           0x00
                                          947      #set      FLASH_B_UNLOCK_7           0x00
                                          948      #set      FLASH_B_UNLOCK_8           0x00
                                          949      #set      FLASH_B_UNLOCK_9           0x00
                                          950      #set      FLASH_B_UNLOCK_10          0x00
                                          951      #set      FLASH_B_UNLOCK_11          0x00
                                          952      #set      FLASH_B_UNLOCK_12          0x00
                                          953      #set      FLASH_B_UNLOCK_13          0x00
                                          954      #set      FLASH_B_UNLOCK_14          0x00
                                          955      #set      FLASH_B_UNLOCK_15          0x00
                                          956
                                          957      #set      DATAFLASH_A_UNLOCK_0       0x00
                                          958      #set      DATAFLASH_A_UNLOCK_1       0x00
                                          959      #set      DATAFLASH_A_UNLOCK_2       0x00
                                          960      #set      DATAFLASH_A_UNLOCK_3       0x00
                                          961      #set      DATAFLASH_A_UNLOCK_4       0x00
                                          962      #set      DATAFLASH_A_UNLOCK_5       0x00
                                          963      #set      DATAFLASH_A_UNLOCK_6       0x00
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  29
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                          964      #set      DATAFLASH_A_UNLOCK_7       0x00
                                          965      #set      DATAFLASH_A_UNLOCK_8       0x00
                                          966      #set      DATAFLASH_A_UNLOCK_9       0x00
                                          967      #set      DATAFLASH_A_UNLOCK_10      0x00
                                          968      #set      DATAFLASH_A_UNLOCK_11      0x00
                                          969      #set      DATAFLASH_A_UNLOCK_12      0x00
                                          970      #set      DATAFLASH_A_UNLOCK_13      0x00
                                          971      #set      DATAFLASH_A_UNLOCK_14      0x00
                                          972      #set      DATAFLASH_A_UNLOCK_15      0x00
                                          973
                                          974      ;===============================================
                                                   =====================
                                          975      ; 4.13  Flash Write Protection
                                          976      ;===============================================
                                                   =====================
                                          977      ; All settings regarding sectors that do not exi
                                                   st on the particular
                                          978      ; device will have no effect.
                                          979
                                          980      #set      FLASH_A_WRITE_PROTECT           OFF
                                                       ; <<< select Flash A write protection
                                          981      #set      PROTECT_SECTOR_SA0              OFF
                                                       ; <<< select individual sector to protect
                                          982      #set      PROTECT_SECTOR_SA1              OFF
                                                       ; <<< select individual sector to protect
                                          983      #set      PROTECT_SECTOR_SA2              OFF
                                                       ; <<< select individual sector to protect
                                          984      #set      PROTECT_SECTOR_SA3              OFF
                                                       ; <<< select individual sector to protect
                                          985      #set      PROTECT_SECTOR_S32              OFF
                                                       ; <<< select individual sector to protect
                                          986      #set      PROTECT_SECTOR_S33              OFF
                                                       ; <<< select individual sector to protect
                                          987      #set      PROTECT_SECTOR_S34              OFF
                                                       ; <<< select individual sector to protect
                                          988      #set      PROTECT_SECTOR_S35              OFF
                                                       ; <<< select individual sector to protect
                                          989      #set      PROTECT_SECTOR_S36              OFF
                                                       ; <<< select individual sector to protect
                                          990      #set      PROTECT_SECTOR_S37              OFF
                                                       ; <<< select individual sector to protect
                                          991      #set      PROTECT_SECTOR_S38              OFF
                                                       ; <<< select individual sector to protect
                                          992      #set      PROTECT_SECTOR_S39              OFF
                                                       ; <<< select individual sector to protect
                                          993
                                          994      ; All settings regarding Flash B are ignored on
                                                   devices that do not
                                          995      ; have a Flash B.
                                          996      #set      FLASH_B_WRITE_PROTECT           OFF
                                                       ; <<< select Flash write protection
                                          997      #set      PROTECT_SECTOR_SB0              OFF
                                                       ; <<< select individual sector to protect
                                          998      #set      PROTECT_SECTOR_SB1              OFF
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  30
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                                       ; <<< select individual sector to protect
                                          999      #set      PROTECT_SECTOR_SB2              OFF
                                                       ; <<< select individual sector to protect
                                         1000      #set      PROTECT_SECTOR_SB3              OFF
                                                       ; <<< select individual sector to protect
                                         1001      #set      PROTECT_SECTOR_S28              OFF
                                                       ; <<< select individual sector to protect
                                         1002      #set      PROTECT_SECTOR_S29              OFF
                                                       ; <<< select individual sector to protect
                                         1003      #set      PROTECT_SECTOR_S30              OFF
                                                       ; <<< select individual sector to protect
                                         1004      #set      PROTECT_SECTOR_S31              OFF
                                                       ; <<< select individual sector to protect
                                         1005
                                         1006      ; All settings regarding DataFlash A are ignored
                                                    on devices that do not
                                         1007      ; have a DataFlash A.
                                         1008      #set      FLASH_B_WRITE_PROTECT           OFF
                                                       ; <<< select Flash write protection
                                         1009      #set      PROTECT_SECTOR_SB0              OFF
                                                       ; <<< select individual sector to protect
                                         1010      #set      PROTECT_SECTOR_SB1              OFF
                                                       ; <<< select individual sector to protect
                                         1011      #set      PROTECT_SECTOR_SB2              OFF
                                                       ; <<< select individual sector to protect
                                         1012      #set      PROTECT_SECTOR_SB3              OFF
                                                       ; <<< select individual sector to protect
                                         1013      #set      PROTECT_SECTOR_S28              OFF
                                                       ; <<< select individual sector to protect
                                         1014      #set      PROTECT_SECTOR_S29              OFF
                                                       ; <<< select individual sector to protect
                                         1015      #set      PROTECT_SECTOR_S30              OFF
                                                       ; <<< select individual sector to protect
                                         1016      #set      PROTECT_SECTOR_S31              OFF
                                                       ; <<< select individual sector to protect
                                         1017
                                         1018
                                         1019      ;===============================================
                                                   =====================
                                         1020      ; 4.14  Boot Vector
                                         1021      ;===============================================
                                                   =====================
                                         1022
                                         1023      #set      BOOT_VECTOR_TABLE  1              ; en
                                                   able boot vector
                                         1024      #set      BOOT_VECTOR_FIXED  2              ; en
                                                   able boot vector
                                         1025
                                         1026      #set      BOOT_VECTOR   BOOT_VECTOR_TABLE   ; <<
                                                   < select type of boot vector
                                         1027
                                         1028      ; If boot vector generation is enabled (BOOT_VEC
                                                   TOR_TABLE, BOOT_VECTOR_FIXED),
                                         1029      ; appropriate code is generated. If it is disabl
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  31
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                                   ed (OFF), start-up file does
                                         1030      ; not care about.
                                         1031      ;
                                         1032      ;   BOOT_VECTOR_TABLE: - Create table entry at a
                                                   ddress oxFFFFDC.
                                         1033      ;                      - Any start address can b
                                                   e set and start-up file will
                                         1034      ;                        set address of this sta
                                                   rt code.
                                         1035      ;   BOOT_VECTOR_FIXED: - Instead of table entry,
                                                    a special marker is set in
                                         1036      ;                        ROM Configuration Block
                                                   , which enables the fixed
                                         1037      ;                        start address 0xDF0080.
                                                    This is prefered setting
                                         1038      ;                        for user boot loaders.
                                         1039      ;                 OFF: - Do not set table entry
                                                   and marker. This might be used
                                         1040      ;                        for application to be l
                                                   oaded by boot loader.
                                         1041      ;
                                         1042      ; Note
                                         1043      ; BOOT_VECTOR_TABLE setting can also be used, if
                                                    all other interrupt vectors
                                         1044      ; are specified via "pragma intvect". Only if in
                                                   terrupts 0..7 are specified
                                         1045      ; via "pragma intvect", these will conflict with
                                                    the vector in this module.
                                         1046      ; The reason is the INTVECT section, which inclu
                                                   des the whole area from the
                                         1047      ; lowest to the highest specified vector.
                                         1048
                                         1049      ;===============================================
                                                   =====================
                                         1050      ; 4.15  UART scanning
                                         1051      ;===============================================
                                                   =====================
                                         1052
                                         1053      #set      UART_SCANNING   OFF        ; <<< enabl
                                                   e UART scanning in
                                         1054                                           ;     Inter
                                                   nal Vector Mode
                                         1055      ;
                                         1056      ; By default, the MCU scans in Internal Vector M
                                                   ode for a UART
                                         1057      ; communication after reset. This enables to est
                                                   ablish a serial
                                         1058      ; communication without switching to Serial Comm
                                                   unication Mode.
                                         1059      ; For the final application, set this switch to
                                                   OFF to achieve the
                                         1060      ; fastest start-up time.
                                         1061
                                         1062      ;===============================================
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  32
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                                   =====================
                                         1063      ; 4.16  Enable RAMCODE Copying
                                         1064      ;===============================================
                                                   =====================
                                         1065
                                         1066      #set      COPY_RAMCODE      ON     ; <<< enable
                                                   RAMCODE section to
                                         1067                                          ; be copied
                                                   from ROM to RAM
                                         1068
                                         1069      ; To get this option properly working the code t
                                                   o be executed has to
                                         1070      ; be linked to section RAMCODE (e.g. by #pragma
                                                   section). The section
                                         1071      ; RAMCODE has be located in RAM and the section
                                                   @RAMCODE has to be
                                         1072      ; located at a fixed address in ROM by linker se
                                                   ttings.
                                         1073
                                         1074      ;===============================================
                                                   =====================
                                         1075      ; 4.17  Enable information stamp in ROM
                                         1076      ;===============================================
                                                   =====================
                                         1077
                                         1078      #set      VERSION_STAMP     ON     ; <<< enable
                                                   version number in
                                         1079                                          ; separated
                                                   section
                                         1080
                                         1081      ;===============================================
                                                   =====================
                                         1082      ; 4.18  Enable Background Debugging Mode
                                         1083      ;===============================================
                                                   =====================
                                         1084
                                         1085      #set      BACKGROUND_DEBUGGING  OFF ; <<< enable
                                                    Background Debugging
                                         1086                                          ; mode
                                         1087
                                         1088      #set      BDM_CONFIGURATION  B'0000000000010000
                                                    ; <<< set BDM configuration
                                         1089      ;                                    ||||||||++-
                                                   -- BdmUART
                                         1090      ;                                    ||||||||
                                                      (0: A, 1: B, 2: C, 3: D)
                                         1091      ;                                    ||||||++---
                                                   -- BdmSynchMode
                                         1092      ;                                    ||||||
                                                      (0: Async., 1: Sync.
                                         1093      ;                                    ||||||
                                                      2: BdmKLine, 3: res.)
                                         1094      ;                                    |||||+-----
                                                   -- BdmAutoStart
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  33
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                         1095      ;                                    ||||+------
                                                   -- BdmExtBreakpointCfg
                                         1096      ;                                    |||+-------
                                                   -- BdmKeepRClock
                                         1097      ;                                    ||+--------
                                                   -- BdmCaliRClock
                                         1098      ;                                    |+---------
                                                   -- BdmKeepBCD
                                         1099      ;                                    +----------
                                                   -- BdmUserKernel
                                         1100
                                         1101      #set      BDM_BAUDRATE    115200   ; <<< set Bau
                                                   drate in Bits/s for BDM
                                         1102
                                         1103      #set      BDM_EXT_CONFIG  0xFFFFFF ; <<< set ext
                                                   ernal Config/Kernel
                                         1104
                                         1105      #set      BDM_WD_PATTERN  0x00     ; <<< set wat
                                                   chdog pattern
                                         1106
                                         1107      #set      BDM_PFCS0       0x0000   ; <<< set def
                                                   ault breakpoint
                                         1108      #set      BDM_PFCS1       0x0000   ;     configu
                                                   rations
                                         1109      #set      BDM_PFCS2       0x0000
                                         1110      #set      BDM_PFCS3       0x0000
                                         1111
                                         1112      #set      BDM_PFA0        0xFFFFFF ; <<< set add
                                                   ress
                                         1113      #set      BDM_PFA1        0xFFFFFF ;     configu
                                                   rations
                                         1114      #set      BDM_PFA2        0xFFFFFF
                                         1115      #set      BDM_PFA3        0xFFFFFF
                                         1116      #set      BDM_PFA4        0xFFFFFF
                                         1117      #set      BDM_PFA5        0xFFFFFF
                                         1118      #set      BDM_PFA6        0xFFFFFF
                                         1119      #set      BDM_PFA7        0xFFFFFF
                                         1120
                                         1121      #set      BDM_PFD0        0xFFFF   ; <<< set pat
                                                   ch data
                                         1122      #set      BDM_PFD1        0xFFFF   ;     configu
                                                   rations
                                         1123      #set      BDM_PFD2        0xFFFF
                                         1124      #set      BDM_PFD3        0xFFFF
                                         1125      #set      BDM_PFD4        0xFFFF
                                         1126      #set      BDM_PFD5        0xFFFF
                                         1127      #set      BDM_PFD6        0xFFFF
                                         1128      #set      BDM_PFD7        0xFFFF
                                         1129
                                         1130
                                         1131      ; <<< END OF SETTINGS >>>
                                         1132
                                         1133      ;===============================================
                                                   =====================
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  34
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                         1134      ; 5  Section and Data Declaration
                                         1135      ;===============================================
                                                   =====================
                                         1136
                                         1137      ;===============================================
                                                   =====================
                                         1138      ; 5.1   Several fixed addresses (fixed for MB963
                                                   xx controllers)
                                         1139      ;===============================================
                                                   =====================
                                         1140
          = 000003F1                     1141      MCSRA      .EQU      0x03F1          ; Flash A M
                                                   emory configuration register
          = 000003F2                     1142      MTCRA      .EQU      0x03F2          ; Flash A M
                                                   emory timing register
          = 000003F5                     1143      MCSRB      .EQU      0x03F5          ; Flash B M
                                                   emory configuration register
          = 000003F6                     1144      MTCRB      .EQU      0x03F6          ; Flash B M
                                                   emory timing register
          = 000003AE                     1145      ROMM       .EQU      0x03AE          ; ROM mirro
                                                   r control register
          = 00000401                     1146      CKSR       .EQU      0x0401          ; Clock sel
                                                   ect control register
          = 00000402                     1147      CKSSR      .EQU      0x0402          ; Clock sta
                                                   bilization select register
          = 00000403                     1148      CKMR       .EQU      0x0403          ; Clock mon
                                                   itor register
          = 00000404                     1149      CKFCR      .EQU      0x0404          ; Clock fre
                                                   quency control register
          = 00000406                     1150      PLLCR      .EQU      0x0406          ; PLL contr
                                                   ol register
          = 0000042C                     1151      VRCR       .EQU      0x042C          ; Voltage R
                                                   egulator Control register
          = 00000041                     1152      ICE01      .EQU      0x0041          ; Input cap
                                                   ture 0/1 source
          = 00000053                     1153      ICE67      .EQU      0x0053          ; Input cap
                                                   ture 6/7 source
          = 00000515                     1154      ICE89      .EQU      0x0515          ; Input cap
                                                   ture 8/9 source
          = 0000051B                     1155      ICE1011    .EQU      0x051B          ; Input cap
                                                   ture 10/11 source
          = 00000514                     1156      ICS89      .EQU      0x0514          ; Input cap
                                                   ture 8/9 edge select
          = 0000051A                     1157      ICS1011    .EQU      0x051A          ; Input cap
                                                   ture 10/11 edge select
          = 00000502                     1158      TCCSL2     .EQU      0x0502          ; Free runn
                                                   ing timer 2 control/status register
          = 00000506                     1159      TCCSL3     .EQU      0x0506          ; Free runn
                                                   ing timer 3 control/status register
                                         1160      #if BUSMODE != SINGLE_CHIP           ; only for
                                                   devices with external bus
                                         1161   X  PIER00     .EQU      0x0444
                                         1162   X  PIER01     .EQU      0x0445
                                         1163   X  PIER02     .EQU      0x0446
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  35
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                         1164   X  PIER03     .EQU      0x0447
                                         1165   X  PIER12     .EQU      0x0450
                                         1166   X  EACL0      .EQU      0x06E0
                                         1167   X  EACH0      .EQU      0x06E1
                                         1168   X  EACL1      .EQU      0x06E2
                                         1169   X  EACH1      .EQU      0x06E3
                                         1170   X  EACL2      .EQU      0x06E4
                                         1171   X  EACH2      .EQU      0x06E5
                                         1172   X  EACL3      .EQU      0x06E6
                                         1173   X  EACH3      .EQU      0x06E7
                                         1174   X  EACL4      .EQU      0x06E8
                                         1175   X  EACH4      .EQU      0x06E9
                                         1176   X  EACL5      .EQU      0x06EA
                                         1177   X  EACH5      .EQU      0x06EB
                                         1178   X  EAS2       .EQU      0x06EC
                                         1179   X  EAS3       .EQU      0x06ED
                                         1180   X  EAS4       .EQU      0x06EE
                                         1181   X  EAS5       .EQU      0x06EF
                                         1182   X  EBM        .EQU      0x06F0
                                         1183   X  EBCF       .EQU      0x06F1
                                         1184   X  EBAE0      .EQU      0x06F2
                                         1185   X  EBAE1      .EQU      0x06F3
                                         1186   X  EBAE2      .EQU      0x06F4
                                         1187   X  EBCS       .EQU      0x06F5
                                         1188      #endif ; BUSMODE != SINGLE_CHIP
                                         1189
                                         1190      ;===============================================
                                                   =====================
                                         1191      ; 5.2   Set ROM Configuration for Boot Vector
                                         1192      ;===============================================
                                                   =====================
                                         1193
                                         1194      #if BOOT_VECTOR == BOOT_VECTOR_TABLE
RE FFFFDC ----------<RESVECT>----------  1195                .SECTION        RESVECT, CONST, LOCATE
                                                   =H'FFFFDC
RE FFFFDC 000000R                        1196                .DATA.E _start
RE FFFFDF 00                             1197                .DATA.B ((ADDRESSMODE << 7) | ((BUSMOD
                                                   E >> 1) << 6) | (CHIP_SELECT5 << 5) | (CHIP_SELE
                                                   CT4 << 4) | (CHIP_SELECT3 << 3) | (CHIP_SELECT2
                                                   << 2) | (CHIP_SELECT1 << 1) | CHIP_SELECT0)
                                         1198
BO DF0030 --------<BOOT_SELECT>--------  1199                .SECTION        BOOT_SELECT, CONST, LO
                                                   CATE=H'DF0030
BO DF0030 FFFFFFFF                       1200                .DATA.L 0xFFFFFFFF
                                         1201      #else
                                         1202   X  #  if BOOT_VECTOR == BOOT_VECTOR_FIXED
                                         1203   X            .SECTION        BOOT_SELECT, CONST, LO
                                                   CATE=H'DF0030
                                         1204   X            .DATA.L 0x292D3A7B        ; "Magic Wor
                                                   d"
                                         1205   X  #  else
                                         1206   X            .SECTION        BOOT_SELECT, CONST, LO
                                                   CATE=H'DF0030
                                         1207   X            .SKIP   4
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  36
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                         1208   X  #  endif
                                         1209      #endif
                                         1210
                                         1211      ;===============================================
                                                   =====================
                                         1212      ; 5.3   Set ROM configuration for UART Scanning
                                         1213      ;===============================================
                                                   =====================
                                         1214
                                         1215      #if UART_SCANNING == ON
                                         1216   X  #  if ((SERIES == MB96340) && (DEVICE < 3))
                                         1217   X  #    error Device does not support UART scanning
                                                    on/off
                                         1218   X  #  else
                                         1219   X            .SECTION        UART_SCAN_SELECT, CONS
                                                   T, LOCATE=H'DF0034
                                         1220   X            .DATA.L 0xFFFFFFFF
                                         1221   X  #  endif ; (SERIES == MB96340 && DEVICE < 3)
                                         1222      #else
UA DF0034 -----<UART_SCAN_SELECT>------  1223                .SECTION        UART_SCAN_SELECT, CONS
                                                   T, LOCATE=H'DF0034
UA DF0034 7B3A2D29                       1224                .DATA.L 0x292D3A7B        ; Decativati
                                                   on "Magic Word"
                                         1225      #endif
UA DF0040 - DF0038   [8]                 1226                .SKIP   0x08
                                         1227
                                         1228      ;===============================================
                                                   =====================
                                         1229      ; 5.4   Store version information
                                         1230      ;===============================================
                                                   =====================
                                         1231
                                         1232      #if VERSION_STAMP == ON
VE 000000 ---------<VERSIONS>----------  1233                .SECTION  VERSIONS, CONST ; change nam
                                                   e, if necessary
VE 000000 53 74 61 72 74 20              1234                .SDATA    "Start ", VERSION, "\n\0"
VE 000006 31 2E 36 34
VE 00000A 0A 00
                                         1235      #endif
                                         1236
                                         1237      ;===============================================
                                                   =====================
                                         1238      ; 5.5   Declaration of __near addressed data sec
                                                   tions
                                         1239      ;===============================================
                                                   =====================
                                         1240
                                         1241      ; sections to be cleared
DA 000000 -----------<DATA>------------  1242                .SECTION  DATA,      DATA,   ALIGN=2
                                                   ; zero clear area
DA 000000 -----------<DATA2>-----------  1243                .SECTION  DATA2,     DATA,   ALIGN=2
                                                   ; zero clear area
DI 000000 ----------<DIRDATA>----------  1244                .SECTION  DIRDATA,   DIR,    ALIGN=2
                                                   ; zero clear direct
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  37
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

LI 000000 ----------<LIBDATA>----------  1245                .SECTION  LIBDATA,   DATA,   ALIGN=2
                                                   ; zero clear lib area
                                         1246
                                         1247      ; sections to be initialised with start-up value
                                                   s
IN 000000 -----------<INIT>------------  1248                .SECTION  INIT,      DATA,   ALIGN=2
                                                   ; initialised area
IN 000000 -----------<INIT2>-----------  1249                .SECTION  INIT2,     DATA,   ALIGN=2
                                                   ; initialised area
DI 000000 ----------<DIRINIT>----------  1250                .SECTION  DIRINIT,   DIR,    ALIGN=2
                                                   ; initialised dir
LI 000000 ----------<LIBINIT>----------  1251                .SECTION  LIBINIT,   DATA,   ALIGN=2
                                                   ; initialised lib area
                                         1252      #if CONSTDATA == RAMCONST
CI 000000 -----------<CINIT>-----------  1253                .SECTION  CINIT,     DATA,   ALIGN=2
                                                   ; initialised const
CI 000000 ----------<CINIT2>-----------  1254                .SECTION  CINIT2,    DATA,   ALIGN=2
                                                   ; initialised const
                                         1255      #endif
                                         1256
                                         1257      ; sections containing start-up values for initia
                                                   lised sections above
DC 000000 ----------<DCONST>-----------  1258                .SECTION  DCONST,    CONST,  ALIGN=2
                                                   ; DINIT initialisers
DI 000000 ---------<DIRCONST>----------  1259                .SECTION  DIRCONST, DIRCONST,ALIGN=2
                                                   ; DIRINIT initialisers
LI 000000 ---------<LIBDCONST>---------  1260                .SECTION  LIBDCONST, CONST,  ALIGN=2
                                                   ; LIBDCONST init val
                                         1261
                                         1262                ; following section is either copied t
                                                   o CINIT (RAMCONST) or
                                         1263                ; mapped by ROM-mirror function (ROMCO
                                                   NST)
CO 000000 -----------<CONST>-----------  1264                .SECTION  CONST,     CONST,  ALIGN=2
                                                   ; CINIT initialisers
CO 000000 ----------<CONST2>-----------  1265                .SECTION  CONST2,    CONST,  ALIGN=2
                                                   ; CINIT initialisers
                                         1266
                                         1267      ;===============================================
                                                   =====================
                                         1268      ; 5.6   Declaration of RAMCODE section and label
                                                   s
                                         1269      ;===============================================
                                                   =====================
                                         1270
                                         1271      #if COPY_RAMCODE == ON
RA 000000 ----------<RAMCODE>----------  1272                .SECTION  RAMCODE,   CODE,  ALIGN=1
                                         1273                .IMPORT _RAM_RAMCODE
                                                   ; provided by linker
                                         1274                .IMPORT _ROM_RAMCODE
                                                   ; provided by linker
                                         1275                ;
RA 000000 ---------<RAMCODE2>----------  1276                .SECTION  RAMCODE2,   CODE,  ALIGN=1
                                         1277                .IMPORT _RAM_RAMCODE2
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  38
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                                    ; provided by linker
                                         1278                .IMPORT _ROM_RAMCODE2
                                                    ; provided by linker
                                         1279      #endif
                                         1280
                                         1281
                                         1282      ;===============================================
                                                   =====================
                                         1283      ; 5.7   Declaration of sections containing other
                                                    sections description
                                         1284      ;===============================================
                                                   =====================
                                         1285
                                         1286      ; DCLEAR contains start address and size of all
                                                   sections to be cleared
                                         1287      ; DTRANS contains source and destination address
                                                    and size of all
                                         1288      ; sections to be initialised with start-up value
                                                   s
                                         1289      ; The compiler automatically adds a descriptor f
                                                   or each __far addressed
                                         1290      ; data section to DCLEAR or DTRANS. These __far
                                                   sections are separated
                                         1291      ; for each C-module.
                                         1292
                                         1293      ; In addition the start-up file adds the descrip
                                                   tors of the previously
                                         1294      ; declared __near section here. This way the sam
                                                   e code in the start-up
                                         1295      ; file can be used for initialising all sections
                                                   .
                                         1296
DC 000000 ----------<DCLEAR>-----------  1297         .SECTION  DCLEAR,    CONST,  ALIGN=2  ; zero
                                                   clear table
                                         1298         ;    Address         Bank            Size
DC 000000 0000S 0000S 0000S              1299         .DATA.H DATA,    BNKSEC DATA,    SIZEOF(DATA
                                                     )
DC 000006 0000S 0000S 0000S              1300         .DATA.H DIRDATA, BNKSEC DIRDATA, SIZEOF(DIRDA
                                                   TA)
DC 00000C 0000S 0000S 0000S              1301         .DATA.H LIBDATA, BNKSEC LIBDATA, SIZEOF(LIBDA
                                                   TA)
                                         1302
DT 000000 ----------<DTRANS>-----------  1303         .SECTION  DTRANS,    CONST,  ALIGN=2  ; copy
                                                   table
                                         1304         ;    Address         Bank               Addre
                                                   ss     Bank          Size
DT 000000 0000S 0000S 0000S 0000S 0000S  1305         .DATA.H DCONST,   BNKSEC DCONST,   INIT,   BN
                                                   KSEC INIT,   SIZEOF INIT
DT 00000A 0000S 0000S 0000S 0000S 0000S  1306         .DATA.H DIRCONST, BNKSEC DIRCONST, DIRINIT,BN
                                                   KSEC DIRINIT,SIZEOF DIRINIT
DT 000014 0000S 0000S 0000S 0000S 0000S  1307         .DATA.H LIBDCONST,BNKSEC LIBDCONST,LIBINIT,BN
                                                   KSEC LIBINIT,SIZEOF LIBINIT
                                         1308
                                         1309      #if CONSTDATA == RAMCONST
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  39
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

DT 00001E 0000S 0000S 0000S 0000S 0000S  1310         .DATA.H CONST,    BNKSEC CONST,    CINIT,  BN
                                                   KSEC CINIT,  SIZEOF CINIT
DT 000028 0000S 0000S 0000S 0000S 0000S  1311         .DATA.H CONST2,   BNKSEC CONST2,   CINIT2, BN
                                                   KSEC CINIT2, SIZEOF CINIT2
                                         1312      #endif
                                         1313
                                         1314      #if COPY_RAMCODE == ON
DT 000032 00000000I 00000000I            1315         .DATA.L _ROM_RAMCODE, _RAM_RAMCODE
DT 00003A 0000S                          1316         .DATA.H SIZEOF RAMCODE
                                         1317         ;
DT 00003C 00000000I 00000000I            1318         .DATA.L _ROM_RAMCODE2, _RAM_RAMCODE2
DT 000044 0000S                          1319         .DATA.H SIZEOF RAMCODE2
                                         1320      #endif
                                         1321
                                         1322      ;===============================================
                                                   =====================
                                         1323      ; 5.8   Stack area and stack top definition/decl
                                                   aration
                                         1324      ;===============================================
                                                   =====================
                                         1325      #if STACK_RESERVE == ON
SS 000000 ----------<SSTACK>-----------  1326                  .SECTION  SSTACK, STACK, ALIGN=2
                                         1327
                                         1328                  .EXPORT __systemstack, __systemstack
                                                   _top
SS 000000                                1329      __systemstack:
SS 000000 [768]B                         1330                  .RES.B    (STACK_SYS_SIZE + 1) & 0xF
                                                   FFE
SS 000300                                1331      __systemstack_top:
SS 000300                                1332      SSTACK_TOP:
                                         1333
US 000000 ----------<USTACK>-----------  1334                  .SECTION  USTACK, STACK, ALIGN=2
                                         1335
                                         1336                  .EXPORT __userstack, __userstack_top
US 000000                                1337      __userstack:
US 000000 [2]B                           1338                  .RES.B    (STACK_USR_SIZE + 1) & 0xF
                                                   FFE
US 000002                                1339      __userstack_top:
US 000002                                1340      USTACK_TOP:
                                         1341
                                         1342      #else
                                         1343   X              .SECTION  SSTACK, STACK, ALIGN=2
                                         1344   X              .SECTION  USTACK, STACK, ALIGN=2
                                         1345      #endif
                                         1346
                                         1347      ;===============================================
                                                   =====================
                                         1348      ; 5.9   Direct page register dummy label definit
                                                   ion
                                         1349      ;===============================================
                                                   =====================
                                         1350
DI 000000 ----------<DIRDATA>----------  1351                .SECTION  DIRDATA  ; zero clear direct
DI 000000                                1352      DIRDATA_S:
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  40
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                                   ; label for DPR init
                                         1353
                                         1354      ; This label is used to get the page of the __di
                                                   rect data.
                                         1355      ; Depending on the linkage order of this startup
                                                    file the label is
                                         1356      ; placed anywhere within the __direct data page.
                                                    However, the
                                         1357      ; statement "PAGE (DIRDATA_S)" is processed. The
                                                   refore, the lower
                                         1358      ; 8 Bit of the address of DIRDATA_S are not rele
                                                   vant and this feature
                                         1359      ; becomes linkage order independent.
                                         1360      ; Note, the linker settings have to make sure th
                                                   at all __direct
                                         1361      ; data are located within the same physical page
                                                    (256 Byte block).
                                         1362
                                         1363      ;===============================================
                                                   =====================
                                         1364      ; 5.10  Set Flash Security
                                         1365      ;===============================================
                                                   =====================
                                         1366
                                         1367      #set FLASH_B_AVAILABLE
                                                                 \
                                         1368        (
                                                                 \
                                         1369          (
                                                                 \
                                         1370            (SERIES == MB96340) &&
                                                                 \
                                         1371            (
                                                                 \
                                         1372              (DEVICE == MB96348HxA) ||
                                                                 \
                                         1373              (DEVICE == MB96348TxA) ||
                                                                 \
                                         1374              (DEVICE == MB96348CxA) ||
                                                                 \
                                         1375              (DEVICE == MB96348HxB) ||
                                                                 \
                                         1376              (DEVICE == MB96348TxB) ||
                                                                 \
                                         1377              (DEVICE == MB96348HxC) ||
                                                                 \
                                         1378              (DEVICE == MB96348TxC) ||
                                                                 \
                                         1379              (DEVICE == MB96348CxC)
                                                                 \
                                         1380            )
                                                                 \
                                         1381          )
                                                                 \
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  41
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                         1382          ||
                                                                 \
                                         1383          (SERIES == MB96370)
                                                                 \
                                         1384          ||
                                                                 \
                                         1385          (
                                                                 \
                                         1386            (SERIES == MB96380) &&
                                                                 \
                                         1387            (
                                                                 \
                                         1388              (DEVICE == MB96388HxB) ||
                                                                 \
                                         1389              (DEVICE == MB96389RxB)
                                                                 \
                                         1390            )
                                                                 \
                                         1391          )
                                                                 \
                                         1392        )
                                         1393
                                         1394      #set DATAFLASH_A_AVAILABLE
                                                                 \
                                         1395        (
                                                                 \
                                         1396          (
                                                                 \
                                         1397            (SERIES == MB96910) &&
                                                                 \
                                         1398            (
                                                                 \
                                         1399              (DEVICE == MB96918DxA)
                                                                 \
                                         1400            )
                                                                 \
                                         1401          )
                                                                 \
                                         1402          ||
                                                                 \
                                         1403          (
                                                                 \
                                         1404            (SERIES == MB96340) &&
                                                                 \
                                         1405            (
                                                                 \
                                         1406              (DEVICE == MB96345DxA)
                                                                 \
                                         1407            )
                                                                 \
                                         1408          )
                                                                 \
                                         1409        )
                                         1410
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  42
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

FL DF0000 -----<FLASH_A_SECURITY>------  1411                .SECTION FLASH_A_SECURITY, CONST, LOCA
                                                   TE=H'DF0000
                                         1412      #if FLASH_A_SECURITY_ENABLE == 0
FL DF0000 6600                           1413                    .DATA.W 0x0066 ; Security DISABLED
                                                    (mandatory for mask ROM)
FL DF0012 - DF0002   [16]                1414                    .SKIP   16
                                         1415      #else FLASH_A_SECURITY_ENABLE == 1
                                         1416   X                .DATA.W 0x0099 ; Security ENABLED
                                         1417   X                .DATA.W ((FLASH_A_UNLOCK_1  << 8)
                                                   | FLASH_A_UNLOCK_0)
                                         1418   X                .DATA.W ((FLASH_A_UNLOCK_3  << 8)
                                                   | FLASH_A_UNLOCK_2)
                                         1419   X                .DATA.W ((FLASH_A_UNLOCK_5  << 8)
                                                   | FLASH_A_UNLOCK_4)
                                         1420   X                .DATA.W ((FLASH_A_UNLOCK_7  << 8)
                                                   | FLASH_A_UNLOCK_6)
                                         1421   X                .DATA.W ((FLASH_A_UNLOCK_9  << 8)
                                                   | FLASH_A_UNLOCK_8)
                                         1422   X                .DATA.W ((FLASH_A_UNLOCK_11 << 8)
                                                   | FLASH_A_UNLOCK_10)
                                         1423   X                .DATA.W ((FLASH_A_UNLOCK_13 << 8)
                                                   | FLASH_A_UNLOCK_12)
                                         1424   X                .DATA.W ((FLASH_A_UNLOCK_15 << 8)
                                                   | FLASH_A_UNLOCK_14)
                                         1425      #endif
FL DF0016 - DF0012   [4]                 1426                    .SKIP   4
FL DF001C - DF0016   [6]                 1427                    .SKIP   6
                                         1428
                                         1429      #if FLASH_B_AVAILABLE == ON
                                         1430   X            .SECTION FLASH_B_SECURITY, CONST, LOCA
                                                   TE=H'DE0000
                                         1431   X  #  if FLASH_B_SECURITY_ENABLE == 0
                                         1432   X                .DATA.W 0x0066 ; Security DISABLED
                                                    (mandatory for mask ROM)
                                         1433   X                .SKIP   16
                                         1434   X  #  else FLASH_B_SECURITY_ENABLE == 1
                                         1435   X                .DATA.W 0x0099 ; Security ENABLED
                                         1436   X                .DATA.W ((FLASH_B_UNLOCK_1  << 8)
                                                   | FLASH_B_UNLOCK_0)
                                         1437   X                .DATA.W ((FLASH_B_UNLOCK_3  << 8)
                                                   | FLASH_B_UNLOCK_2)
                                         1438   X                .DATA.W ((FLASH_B_UNLOCK_5  << 8)
                                                   | FLASH_B_UNLOCK_4)
                                         1439   X                .DATA.W ((FLASH_B_UNLOCK_7  << 8)
                                                   | FLASH_B_UNLOCK_6)
                                         1440   X                .DATA.W ((FLASH_B_UNLOCK_9  << 8)
                                                   | FLASH_B_UNLOCK_8)
                                         1441   X                .DATA.W ((FLASH_B_UNLOCK_11 << 8)
                                                   | FLASH_B_UNLOCK_10)
                                         1442   X                .DATA.W ((FLASH_B_UNLOCK_13 << 8)
                                                   | FLASH_B_UNLOCK_12)
                                         1443   X                .DATA.W ((FLASH_B_UNLOCK_15 << 8)
                                                   | FLASH_B_UNLOCK_14)
                                         1444   X  #  endif
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  43
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                         1445   X                .SKIP   4
                                         1446   X                .SKIP   6
                                         1447      #endif ; FLASH_B_AVAILABLE == ON
                                         1448
                                         1449      #if DATAFLASH_A_AVAILABLE == ON
                                         1450   X            .SECTION DATAFLASH_A_SECURITY, CONST,
                                                   LOCATE=H'0EFF00
                                         1451   X  #  if DATAFLASH_A_SECURITY_ENABLE == 0
                                         1452   X                .DATA.W 0x0066 ; Security DISABLED
                                                    (mandatory for mask ROM)
                                         1453   X                .SKIP   16
                                         1454   X  #  else DATAFLASH_A_SECURITY_ENABLE == 1
                                         1455   X                .DATA.W 0x0099 ; Security ENABLED
                                         1456   X                .DATA.W ((DATAFLASH_A_UNLOCK_1  <<
                                                    8) | DATAFLASH_A_UNLOCK_0)
                                         1457   X                .DATA.W ((DATAFLASH_A_UNLOCK_3  <<
                                                    8) | DATAFLASH_A_UNLOCK_2)
                                         1458   X                .DATA.W ((DATAFLASH_A_UNLOCK_5  <<
                                                    8) | DATAFLASH_A_UNLOCK_4)
                                         1459   X                .DATA.W ((DATAFLASH_A_UNLOCK_7  <<
                                                    8) | DATAFLASH_A_UNLOCK_6)
                                         1460   X                .DATA.W ((DATAFLASH_A_UNLOCK_9  <<
                                                    8) | DATAFLASH_A_UNLOCK_8)
                                         1461   X                .DATA.W ((DATAFLASH_A_UNLOCK_11 <<
                                                    8) | DATAFLASH_A_UNLOCK_10)
                                         1462   X                .DATA.W ((DATAFLASH_A_UNLOCK_13 <<
                                                    8) | DATAFLASH_A_UNLOCK_12)
                                         1463   X                .DATA.W ((DATAFLASH_A_UNLOCK_15 <<
                                                    8) | DATAFLASH_A_UNLOCK_14)
                                         1464   X  #  endif
                                         1465   X                .SKIP   4
                                         1466   X                .SKIP   6
                                         1467      #endif ; DATAFLASH_A_AVAILABLE == ON
                                         1468
                                         1469
                                         1470      ;===============================================
                                                   =====================
                                         1471      ; 5.11  Set Flash write protection
                                         1472      ;===============================================
                                                   =====================
                                         1473
FL DF001C ------<FLASH_A_PROTECT>------  1474                .SECTION FLASH_A_PROTECT, CONST, LOCAT
                                                   E=H'DF001C
                                         1475      #if FLASH_A_WRITE_PROTECT == ON
                                         1476   X            .DATA.L 0x292D3A7B
                                         1477   X            .DATA.B ~((PROTECT_SECTOR_SA3 << 3) |
                                                   (PROTECT_SECTOR_SA2 << 2) | (PROTECT_SECTOR_SA1
                                                   << 1) | PROTECT_SECTOR_SA0)
                                         1478   X            .DATA.H 0x0000
                                         1479   X            .DATA.B ~((PROTECT_SECTOR_S31 << 7) |
                                                   (PROTECT_SECTOR_S30 << 6) | (PROTECT_SECTOR_S29
                                                   << 5) | (PROTECT_SECTOR_S28 << 4))
                                         1480   X            .DATA.B ~((PROTECT_SECTOR_S39 << 7) |
                                                   (PROTECT_SECTOR_S38 << 6) | (PROTECT_SECTOR_S37
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  44
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                                   << 5) | (PROTECT_SECTOR_S36 << 4) | (PROTECT_SEC
                                                   TOR_S35 << 3) | (PROTECT_SECTOR_S34 << 2) | (PRO
                                                   TECT_SECTOR_S33 << 1) | PROTECT_SECTOR_S32)
                                         1481   X            .SKIP   3
                                         1482      #else
FL DF001C FFFFFFFF                       1483                .DATA.L 0xFFFFFFFF
FL DF0028 - DF0020   [8]                 1484                .SKIP   8
                                         1485      #endif ; FLASH_A_WRITE_PROTECT
FL DF0030 - DF0028   [8]                 1486                .SKIP   8
                                         1487
                                         1488      #if FLASH_B_AVAILABLE == ON
                                         1489   X            .SECTION FLASH_B_PROTECT, CONST, LOCAT
                                                   E=H'DE001C
                                         1490   X  #  if FLASH_B_WRITE_PROTECT == ON
                                         1491   X            .DATA.L 0x292D3A7B
                                         1492   X            .DATA.B ~((PROTECT_SECTOR_SB3 << 3) |
                                                   (PROTECT_SECTOR_SB2 << 2) | (PROTECT_SECTOR_SB1
                                                   << 1) | PROTECT_SECTOR_SB0)
                                         1493   X            .DATA.H 0x0000
                                         1494   X            .DATA.B ~((PROTECT_SECTOR_S31 << 7) |
                                                   (PROTECT_SECTOR_S30 << 6) | (PROTECT_SECTOR_S29
                                                   << 5) | (PROTECT_SECTOR_S28 << 4))
                                         1495   X            .DATA.B ~((PROTECT_SECTOR_S39 << 7) |
                                                   (PROTECT_SECTOR_S38 << 6) | (PROTECT_SECTOR_S37
                                                   << 5) | (PROTECT_SECTOR_S36 << 4) | (PROTECT_SEC
                                                   TOR_S35 << 3) | (PROTECT_SECTOR_S34 << 2) | (PRO
                                                   TECT_SECTOR_S33 << 1) | PROTECT_SECTOR_S32)
                                         1496   X            .SKIP   3
                                         1497   X  #  else
                                         1498   X            .DATA.L 0xFFFFFFFF
                                         1499   X            .SKIP   8
                                         1500   X  #  endif ; FLASH_B_WRITE_PROTECT
                                         1501   X            .SKIP   8
                                         1502      #endif ; FLASH_B_AVAILABLE == ON
                                         1503
                                         1504      ;===============================================
                                                   =====================
                                         1505      ; 5.12  Debug address specification
                                         1506      ;===============================================
                                                   =====================
                                         1507      ;
                                         1508      ; BDM configuration section should always be def
                                                   ined for later
                                         1509      ; configuration by e.g. debugger tool or (specia
                                                   l) programmer tool.
                                         1510
BD DF0040 --------<BDM_CONFIG>---------  1511                .SECTION BDM_CONFIG, CONST, LOCATE=H'D
                                                   F0040
                                         1512
                                         1513      #if BACKGROUND_DEBUGGING == ON
                                         1514   X
                                         1515   X            .DATA.L 0x292D3A7B
                                         1516   X
                                         1517   X            .ORG    H'DF0044
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  45
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                         1518   X            .DATA.W BDM_CONFIGURATION
                                         1519   X
                                         1520   X            .ORG    H'DF0046
                                         1521   X  #  if ((SERIES == MB96340) && (DEVICE < 3))
                                         1522   X  #    error Device does not support background de
                                                   bugging
                                         1523   X  #  endif ; ((SERIES == MB96340) && (DEVICE < 3))
                                         1524   X
                                         1525   X  #  if ((SERIES == MB96340) && (DEVICE < 12))
                                         1526   X            .DATA.W (D'16 * CRYSTAL + BDM_BAUDRATE
                                                   ) / BDM_BAUDRATE
                                         1527   X  #  else
                                         1528   X            .DATA.W (D'32 * CRYSTAL + BDM_BAUDRATE
                                                   ) / BDM_BAUDRATE
                                         1529   X  #  endif ; ((SERIES == MB96340) && (DEVICE < 12)
                                                   )
                                         1530   X
                                         1531   X            .ORG    H'DF0048
                                         1532   X            .DATA.E BDM_EXT_CONFIG
                                         1533   X
                                         1534   X            .ORG    H'DF004B
                                         1535   X            .DATA.B BDM_WD_PATTERN
                                         1536   X
                                         1537   X            .ORG    H'DF0050
                                         1538   X            .DATA.W BDM_PFCS0
                                         1539   X            .DATA.W BDM_PFCS1
                                         1540   X            .DATA.W BDM_PFCS2
                                         1541   X            .DATA.W BDM_PFCS3
                                         1542   X
                                         1543   X            .DATA.E BDM_PFA0, BDM_PFA1
                                         1544   X            .DATA.E BDM_PFA2, BDM_PFA3
                                         1545   X            .DATA.E BDM_PFA4, BDM_PFA5
                                         1546   X            .DATA.E BDM_PFA6, BDM_PFA7
                                         1547   X
                                         1548   X            .DATA.W BDM_PFD0, BDM_PFD1
                                         1549   X            .DATA.W BDM_PFD2, BDM_PFD3
                                         1550   X            .DATA.W BDM_PFD4, BDM_PFD5
                                         1551   X            .DATA.W BDM_PFD6, BDM_PFD7
                                         1552      #else
BD DF0040 [64]  FF                       1553                .DATAB.B 64, 0xFF        ; fill sectio
                                                   n with 0xFF
                                         1554
                                         1555      #endif ; BACKGROUND_DEBUGGING == ON
                                         1556
BD DF0080                                1557                .ORG    0xDF0080
                                         1558
                                         1559      ;===============================================
                                                   =====================
                                         1560      ; 6  Start-Up Code
                                         1561      ;===============================================
                                                   =====================
                                         1562
                                         1563      ;===============================================
                                                   =====================
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  46
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                         1564      ; 6.1   Import external symbols
                                         1565      ;===============================================
                                                   =====================
                                         1566
                                         1567                .IMPORT   _main                    ; u
                                                   ser code entrance
                                         1568      #if CLIBINIT == ON
                                         1569   X            .IMPORT   __stream_init
                                         1570   X            .IMPORT   _exit
                                         1571   X            .EXPORT   __exit
                                         1572      #endif
                                         1573                .EXPORT   _start
                                         1574
                                         1575      ;===============================================
                                                   =====================
                                         1576      ;   ___  _____   __    ___  _____
                                         1577      ;  /       |    /  \  |   \   |
                                         1578      ;  \___    |   |    | |___/   |
                                         1579      ;      \   |   |----| |  \    |
                                         1580      ;   ___/   |   |    | |   \   |      Begin of ac
                                                   tual code section
                                         1581      ;
                                         1582      ;===============================================
                                                   =====================
CO 000000 --------<CODE_START>---------  1583                .SECTION  CODE_START, CODE, ALIGN=1
                                         1584
                                         1585      ;===============================================
                                                   =====================
                                         1586      ; 6.2   Program start (the reset vector should p
                                                   oint here)
                                         1587      ;===============================================
                                                   =====================
CO 000000                                1588      _start:
CO 000000 00                             1589                NOP  ; This NOP is only for debugging.
                                                    On debugger the IP
                                         1590                     ; (instruction pointer) should po
                                                   int here after reset
                                         1591
                                         1592      ;===============================================
                                                   =====================
                                         1593      ; 6.3   "NOT RESET YET" WARNING
                                         1594      ;===============================================
                                                   =====================
CO 000001                                1595      notresetyet:
CO 000001 00                             1596                NOP  ; read hint below!!!!!!!
                                         1597      ; If the debugger stays at this NOP after downlo
                                                   ad, the controller has
                                         1598      ; not been reset yet. In order to reset all hard
                                                   ware registers it is
                                         1599      ; highly recommended to reset the controller.
                                         1600      ; However, if no reset vector has been defined o
                                                   n purpose, this start
                                         1601      ; address can also be used.
                                         1602      ; This mechanism is using the .END instruction a
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  47
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                                   t the end of this mo-
                                         1603      ; dule. It is not necessary for controller opera
                                                   tion but improves
                                         1604      ; security during debugging (mainly emulator deb
                                                   ugger).
                                         1605      ; If the debugger stays here after a single step
                                                    from label "_start"
                                         1606      ; to label "notresetyet", this note can be ignor
                                                   ed.
                                         1607
                                         1608      ;===============================================
                                                   =====================
                                         1609      ; 6.4   Initialisation of processor status
                                         1610      ;===============================================
                                                   =====================
CO 000002 2480                           1611                AND  CCR, #0x80          ; disable int
                                                   errupts
CO 000004 1A07                           1612                MOV  ILM,#7              ; set interru
                                                   pt level mask to ALL
CO 000006 0A00                           1613                MOV  RP,#REGBANK         ; set registe
                                                   r bank pointer
                                         1614
                                         1615      ;===============================================
                                                   =====================
                                         1616      ; 6.5   Set clock ratio (ignore subclock)
                                         1617      ;===============================================
                                                   =====================
                                         1618
CO 000008 D0                             1619                MOVN A, #0               ; set bank 0
                                                   in DTB for the case that
CO 000009 6F10                           1620                MOV  DTB, A              ; start-up co
                                                   de was not jumped by reset
                                         1621
CO 00000B 71DF0204FC                     1622                MOV  CKSSR, #(0xF8 | MC_STAB_TIME)  ;
                                                   set clock stabilization time
                                         1623
                                         1624      #set CLOCK_RC     0     ; RC clock is input to c
                                                   lock divider
                                         1625      #set CLOCK_MAIN   1     ; MAIN clock is input to
                                                    clock divider
                                         1626      #set CLOCK_PLL    2     ; PLL clock is input to
                                                   clock divider
                                         1627      #set CLOCK_SUB    3     ; SUB clock is input to
                                                   clock divider
                                         1628
                                         1629      ; select default source for CLKB and CLKP1
                                         1630      #set CLKB_CLKP1_SOURCE  CLOCK_PLL
                                         1631      ; select default source for CLKP2 and CLKP3
                                         1632      #set CLKP2_CLKP3_SOURCE CLOCK_PLL
                                         1633
                                         1634      ;                                  ++------    P
                                                   LL multiplier (CLKS1, CLKS2)
                                         1635      ;                                  ||+-----    C
                                                   LKB divider (CPU clock)
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  48
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                         1636      ;                                  |||+----    C
                                                   LKP1 divider (peripherals except CAN, Sound, USB
                                                   )
                                         1637      ;                                  ||||+---    C
                                                   LKP2 divider (CAN, Sound)
                                         1638      ;                                  |||||+--    C
                                                   LKP3 divider (USB if available)
                                         1639      ;                                  ||||||+-    V
                                                   CO clock multiplier (PPG internal)
                                         1640      ;                                  |||||||
                                         1641      #if CLOCK_SPEED == CPU_4MHZ_MAIN_CLKP2_4MHZ
                                         1642   X  #  set   CLK_PARAMS_4MHZ_PLL_LOW 0x011111E   ; C
                                                   LKS1=CLKS2= 4MHZ, CLK_VCO= 56MHZ
                                         1643   X  #  set   CLK_PARAMS_4MHZ_CLKB2   0x011111E   ; C
                                                   LKS1=CLKS2= 4MHZ, CLK_VCO= 56MHZ
                                         1644   X  #  set   CLK_PARAMS_8MHZ_PLL_LOW 0x012222E   ; C
                                                   LKS1=CLKS2= 8MHZ, CLK_VCO=112MHZ
                                         1645   X  #  set   CLK_PARAMS_8MHZ_CLKB2   0x012222E   ; C
                                                   LKS1=CLKS2= 8MHZ, CLK_VCO=112MHZ
                                         1646   X  #  set  CLK_PARAMS_16MHZ_PLL_LOW 0x014444C   ; C
                                                   LKS1=CLKS2=16MHZ, CLK_VCO=192MHZ
                                         1647   X  #  set  CLK_PARAMS_16MHZ_CLKB2   0x014444C   ; C
                                                   LKS1=CLKS2=16MHZ, CLK_VCO=192MHZ
                                         1648   X  #  set CLKB_CLKP1_SOURCE  CLOCK_MAIN         ; s
                                                   elect MAIN clock as source for CLKB, CLKP1 divid
                                                   er
                                         1649   X  #  set CLKP2_CLKP3_SOURCE CLOCK_MAIN         ; s
                                                   elect MAIN clock as source for CLKP2, CLKP3 divi
                                                   der
                                         1650      #elif CLOCK_SPEED == CPU_48MHZ_CLKP1_16MHZ_CLKP2
                                                   _CLKP3_MAIN
                                         1651   X  #  set   CLK_PARAMS_4MHZ_PLL_LOW 0x0C13114   ; C
                                                   LKS1=CLKS2=48MHZ, CLK_VCO=192MHZ
                                         1652   X  #  set   CLK_PARAMS_4MHZ_CLKB2   0x1826112   ; C
                                                   LKS1=CLKS2=96MHZ, CLK_VCO=192MHZ
                                         1653   X  #  set   CLK_PARAMS_8MHZ_PLL_LOW 0x0613114   ; C
                                                   LKS1=CLKS2=48MHZ, CLK_VCO=192MHZ
                                         1654   X  #  set   CLK_PARAMS_8MHZ_CLKB2   0x0C26112   ; C
                                                   LKS1=CLKS2=96MHZ, CLK_VCO=192MHZ
                                         1655   X  #  set  CLK_PARAMS_16MHZ_PLL_LOW 0x0313114   ; C
                                                   LKS1=CLKS2=48MHZ, CLK_VCO=192MHZ
                                         1656   X  #  set  CLK_PARAMS_16MHZ_CLKB2   0x0626112   ; C
                                                   LKS1=CLKS2=96MHZ, CLK_VCO=192MHZ
                                         1657   X  #  set CLKP2_CLKP3_SOURCE CLOCK_MAIN         ; s
                                                   elect MAIN clock as source for CLKP2, CLKP3 divi
                                                   der
                                         1658   X
                                         1659      #elif CLOCK_SPEED == CPU_4MHZ_PLL_CLKP2_4MHZ
                                         1660   X  #  set   CLK_PARAMS_4MHZ_PLL_LOW 0x011111E   ; C
                                                   LKS1=CLKS2= 4MHZ, CLK_VCO= 56MHZ
                                         1661   X  #  set   CLK_PARAMS_4MHZ_CLKB2   0x022222E   ; C
                                                   LKS1=CLKS2= 8MHZ, CLK_VCO=112MHZ
                                         1662   X  #  set   CLK_PARAMS_8MHZ_PLL_LOW 0x012222E   ; C
                                                   LKS1=CLKS2= 8MHZ, CLK_VCO=112MHZ
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  49
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                         1663   X  #  set   CLK_PARAMS_8MHZ_CLKB2   0x012222E   ; C
                                                   LKS1=CLKS2= 8MHZ, CLK_VCO=112MHZ
                                         1664   X  #  set  CLK_PARAMS_16MHZ_PLL_LOW 0x014444C   ; C
                                                   LKS1=CLKS2=16MHZ, CLK_VCO=192MHZ
                                         1665   X  #  set  CLK_PARAMS_16MHZ_CLKB2   0x014444C   ; C
                                                   LKS1=CLKS2=16MHZ, CLK_VCO=192MHZ
                                         1666      #elif CLOCK_SPEED == CPU_8MHZ_CLKP2_8MHZ
                                         1667   X  #  set   CLK_PARAMS_4MHZ_PLL_LOW 0x021111E   ; C
                                                   LKS1=CLKS2= 8MHZ, CLK_VCO=112MHZ
                                         1668   X  #  set   CLK_PARAMS_4MHZ_CLKB2   0x042222C   ; C
                                                   LKS1=CLKS2=16MHZ, CLK_VCO=192MHZ
                                         1669   X  #  set   CLK_PARAMS_8MHZ_PLL_LOW 0x011111E   ; C
                                                   LKS1=CLKS2= 8MHZ, CLK_VCO=112MHZ
                                         1670   X  #  set   CLK_PARAMS_8MHZ_CLKB2   0x022222C   ; C
                                                   LKS1=CLKS2=16MHZ, CLK_VCO=192MHZ
                                         1671   X  #  set  CLK_PARAMS_16MHZ_PLL_LOW 0x012222C   ; C
                                                   LKS1=CLKS2=16MHZ, CLK_VCO=192MHZ
                                         1672   X  #  set  CLK_PARAMS_16MHZ_CLKB2   0x012222C   ; C
                                                   LKS1=CLKS2=16MHZ, CLK_VCO=192MHZ
                                         1673      #elif CLOCK_SPEED == CPU_12MHZ_CLKP2_12MHZ
                                         1674   X  #  set   CLK_PARAMS_4MHZ_PLL_LOW 0x031111E   ; C
                                                   LKS1=CLKS2=12MHZ, CLK_VCO=168MHZ
                                         1675   X  #  set   CLK_PARAMS_4MHZ_CLKB2   0x0622228   ; C
                                                   LKS1=CLKS2=24MHZ, CLK_VCO=192MHZ
                                         1676   X  #  set   CLK_PARAMS_8MHZ_PLL_LOW 0x0322228   ; C
                                                   LKS1=CLKS2=24MHZ, CLK_VCO=192MHZ
                                         1677   X  #  set   CLK_PARAMS_8MHZ_CLKB2   0x0322228   ; C
                                                   LKS1=CLKS2=24MHZ, CLK_VCO=192MHZ
                                         1678   X  #  set  CLK_PARAMS_16MHZ_PLL_LOW 0x0344444   ; C
                                                   LKS1=CLKS2=48MHZ, CLK_VCO=192MHZ
                                         1679   X  #  set  CLK_PARAMS_16MHZ_CLKB2   0x0344444   ; C
                                                   LKS1=CLKS2=48MHZ, CLK_VCO=192MHZ
                                         1680      #elif CLOCK_SPEED == CPU_16MHZ_CLKP2_16MHZ
                                         1681   X  #  set   CLK_PARAMS_4MHZ_PLL_LOW 0x041111C   ; C
                                                   LKS1=CLKS2=16MHZ, CLK_VCO=192MHZ
                                         1682   X  #  set   CLK_PARAMS_4MHZ_CLKB2   0x0822226   ; C
                                                   LKS1=CLKS2=32MHZ, CLK_VCO=192MHZ
                                         1683   X  #  set   CLK_PARAMS_8MHZ_PLL_LOW 0x021111C   ; C
                                                   LKS1=CLKS2=16MHZ, CLK_VCO=192MHZ
                                         1684   X  #  set   CLK_PARAMS_8MHZ_CLKB2   0x0422226   ; C
                                                   LKS1=CLKS2=32MHZ, CLK_VCO=192MHZ
                                         1685   X  #  set  CLK_PARAMS_16MHZ_PLL_LOW 0x011111C   ; C
                                                   LKS1=CLKS2=16MHZ, CLK_VCO=192MHZ
                                         1686   X  #  set  CLK_PARAMS_16MHZ_CLKB2   0x0222226   ; C
                                                   LKS1=CLKS2=32MHZ, CLK_VCO=192MHZ
                                         1687      #elif CLOCK_SPEED == CPU_24MHZ_CLKP2_12MHZ
                                         1688   X  #  set   CLK_PARAMS_4MHZ_PLL_LOW 0x0611218   ; C
                                                   LKS1=CLKS2=24MHZ, CLK_VCO=192MHZ
                                         1689   X  #  set   CLK_PARAMS_4MHZ_CLKB2   0x0C22424   ; C
                                                   LKS1=CLKS2=48MHZ, CLK_VCO=192MHZ
                                         1690   X  #  set   CLK_PARAMS_8MHZ_PLL_LOW 0x0311218   ; C
                                                   LKS1=CLKS2=24MHZ, CLK_VCO=192MHZ
                                         1691   X  #  set   CLK_PARAMS_8MHZ_CLKB2   0x0622424   ; C
                                                   LKS1=CLKS2=48MHZ, CLK_VCO=192MHZ
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  50
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                         1692   X  #  set  CLK_PARAMS_16MHZ_PLL_LOW 0x0322424   ; C
                                                   LKS1=CLKS2=48MHZ, CLK_VCO=192MHZ
                                         1693   X  #  set  CLK_PARAMS_16MHZ_CLKB2   0x0322424   ; C
                                                   LKS1=CLKS2=48MHZ, CLK_VCO=192MHZ
                                         1694      #elif CLOCK_SPEED == CPU_24MHZ_CLKP2_16MHZ
                                         1695   X  #  set   CLK_PARAMS_4MHZ_PLL_LOW 0x0C22324   ; C
                                                   LKS1=CLKS2=48MHZ, CLK_VCO=192MHZ
                                         1696   X  #  set   CLK_PARAMS_4MHZ_CLKB2   0x0C22324   ; C
                                                   LKS1=CLKS2=48MHZ, CLK_VCO=192MHZ
                                         1697   X  #  set   CLK_PARAMS_8MHZ_PLL_LOW 0x0622324   ; C
                                                   LKS1=CLKS2=48MHZ, CLK_VCO=192MHZ
                                         1698   X  #  set   CLK_PARAMS_8MHZ_CLKB2   0x0622324   ; C
                                                   LKS1=CLKS2=48MHZ, CLK_VCO=192MHZ
                                         1699   X  #  set  CLK_PARAMS_16MHZ_PLL_LOW 0x0322324   ; C
                                                   LKS1=CLKS2=48MHZ, CLK_VCO=192MHZ
                                         1700   X  #  set  CLK_PARAMS_16MHZ_CLKB2   0x0322324   ; C
                                                   LKS1=CLKS2=48MHZ, CLK_VCO=192MHZ
                                         1701      #elif CLOCK_SPEED == CPU_24MHZ_CLKP2_24MHZ
                                         1702   X  #  set   CLK_PARAMS_4MHZ_PLL_LOW 0x0611118   ; C
                                                   LKS1=CLKS2=24MHZ, CLK_VCO=192MHZ
                                         1703   X  #  set   CLK_PARAMS_4MHZ_CLKB2   0x0C22224   ; C
                                                   LKS1=CLKS2=48MHZ, CLK_VCO=192MHZ
                                         1704   X  #  set   CLK_PARAMS_8MHZ_PLL_LOW 0x0311118   ; C
                                                   LKS1=CLKS2=24MHZ, CLK_VCO=192MHZ
                                         1705   X  #  set   CLK_PARAMS_8MHZ_CLKB2   0x0622224   ; C
                                                   LKS1=CLKS2=48MHZ, CLK_VCO=192MHZ
                                         1706   X  #  set  CLK_PARAMS_16MHZ_PLL_LOW 0x0322224   ; C
                                                   LKS1=CLKS2=48MHZ, CLK_VCO=192MHZ
                                         1707   X  #  set  CLK_PARAMS_16MHZ_CLKB2   0x0322224   ; C
                                                   LKS1=CLKS2=48MHZ, CLK_VCO=192MHZ
                                         1708      #elif CLOCK_SPEED == CPU_32MHZ_CLKP2_16MHZ
                                         1709   X  #  set   CLK_PARAMS_4MHZ_PLL_LOW 0x0811216   ; C
                                                   LKS1=CLKS2=32MHZ, CLK_VCO=192MHZ
                                         1710   X  #  set   CLK_PARAMS_4MHZ_CLKB2   0x1022422   ; C
                                                   LKS1=CLKS2=64MHZ, CLK_VCO=128MHZ
                                         1711   X  #  set   CLK_PARAMS_8MHZ_PLL_LOW 0x0411216   ; C
                                                   LKS1=CLKS2=32MHZ, CLK_VCO=192MHZ
                                         1712   X  #  set   CLK_PARAMS_8MHZ_CLKB2   0x0822422   ; C
                                                   LKS1=CLKS2=64MHZ, CLK_VCO=128MHZ
                                         1713   X  #  set  CLK_PARAMS_16MHZ_PLL_LOW 0x0211216   ; C
                                                   LKS1=CLKS2=32MHZ, CLK_VCO=192MHZ
                                         1714   X  #  set  CLK_PARAMS_16MHZ_CLKB2   0x0422422   ; C
                                                   LKS1=CLKS2=64MHZ, CLK_VCO=128MHZ
                                         1715      #elif CLOCK_SPEED == CPU_32MHZ_CLKP1_16MHZ_CLKP2
                                                   _16MHZ
                                         1716   X  #  set   CLK_PARAMS_4MHZ_PLL_LOW 0x0812216   ; C
                                                   LKS1=CLKS2=32MHZ, CLK_VCO=192MHZ
                                         1717   X  #  set   CLK_PARAMS_4MHZ_CLKB2   0x1024422   ; C
                                                   LKS1=CLKS2=64MHZ, CLK_VCO=128MHZ
                                         1718   X  #  set   CLK_PARAMS_8MHZ_PLL_LOW 0x0412216   ; C
                                                   LKS1=CLKS2=32MHZ, CLK_VCO=192MHZ
                                         1719   X  #  set   CLK_PARAMS_8MHZ_CLKB2   0x0824422   ; C
                                                   LKS1=CLKS2=64MHZ, CLK_VCO=128MHZ
                                         1720   X  #  set  CLK_PARAMS_16MHZ_PLL_LOW 0x0212216   ; C
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  51
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                                   LKS1=CLKS2=32MHZ, CLK_VCO=192MHZ
                                         1721   X  #  set  CLK_PARAMS_16MHZ_CLKB2   0x0424422   ; C
                                                   LKS1=CLKS2=64MHZ, CLK_VCO=128MHZ
                                         1722      #elif CLOCK_SPEED == CPU_40MHZ_CLKP2_16MHZ
                                         1723   X  #  set   CLK_PARAMS_4MHZ_PLL_LOW 0x1422522   ; C
                                                   LKS1=CLKS2=80MHZ, CLK_VCO=160MHZ
                                         1724   X  #  set   CLK_PARAMS_4MHZ_CLKB2   0x1422522   ; C
                                                   LKS1=CLKS2=80MHZ, CLK_VCO=160MHZ
                                         1725   X  #  set   CLK_PARAMS_8MHZ_PLL_LOW 0x0A22522   ; C
                                                   LKS1=CLKS2=80MHZ, CLK_VCO=160MHZ
                                         1726   X  #  set   CLK_PARAMS_8MHZ_CLKB2   0x0A22522   ; C
                                                   LKS1=CLKS2=80MHZ, CLK_VCO=160MHZ
                                         1727   X  #  set  CLK_PARAMS_16MHZ_PLL_LOW 0x0522522   ; C
                                                   LKS1=CLKS2=80MHZ, CLK_VCO=160MHZ
                                         1728   X  #  set  CLK_PARAMS_16MHZ_CLKB2   0x0522522   ; C
                                                   LKS1=CLKS2=80MHZ, CLK_VCO=160MHZ
                                         1729      #elif CLOCK_SPEED == CPU_48MHZ_CLKP2_16MHZ
                                         1730      #  set   CLK_PARAMS_4MHZ_PLL_LOW 0x0C11314   ; C
                                                   LKS1=CLKS2=48MHZ, CLK_VCO=192MHZ
                                         1731      #  set   CLK_PARAMS_4MHZ_CLKB2   0x1822622   ; C
                                                   LKS1=CLKS2=96MHZ, CLK_VCO=192MHZ
                                         1732      #  set   CLK_PARAMS_8MHZ_PLL_LOW 0x0611314   ; C
                                                   LKS1=CLKS2=48MHZ, CLK_VCO=192MHZ
                                         1733      #  set   CLK_PARAMS_8MHZ_CLKB2   0x0C22622   ; C
                                                   LKS1=CLKS2=96MHZ, CLK_VCO=192MHZ
                                         1734      #  set  CLK_PARAMS_16MHZ_PLL_LOW 0x0311314   ; C
                                                   LKS1=CLKS2=48MHZ, CLK_VCO=192MHZ
                                         1735      #  set  CLK_PARAMS_16MHZ_CLKB2   0x0622622   ; C
                                                   LKS1=CLKS2=96MHZ, CLK_VCO=192MHZ
                                         1736      #elif CLOCK_SPEED == CPU_48MHZ_CLKP1_32MHZ_CLKP2
                                                   _16MHZ
                                         1737   X  #  set   CLK_PARAMS_4MHZ_PLL_LOW 0x1823622   ; C
                                                   LKS1=CLKS2=96MHZ, CLK_VCO=192MHZ
                                         1738   X  #  set   CLK_PARAMS_4MHZ_CLKB2   0x1823622   ; C
                                                   LKS1=CLKS2=96MHZ, CLK_VCO=192MHZ
                                         1739   X  #  set   CLK_PARAMS_8MHZ_PLL_LOW 0x0C23622   ; C
                                                   LKS1=CLKS2=96MHZ, CLK_VCO=192MHZ
                                         1740   X  #  set   CLK_PARAMS_8MHZ_CLKB2   0x0C23622   ; C
                                                   LKS1=CLKS2=96MHZ, CLK_VCO=192MHZ
                                         1741   X  #  set  CLK_PARAMS_16MHZ_PLL_LOW 0x0623622   ; C
                                                   LKS1=CLKS2=96MHZ, CLK_VCO=192MHZ
                                         1742   X  #  set  CLK_PARAMS_16MHZ_CLKB2   0x0623622   ; C
                                                   LKS1=CLKS2=96MHZ, CLK_VCO=192MHZ
                                         1743   X  #elif CLOCK_SPEED == CPU_48MHZ_CLKP1_24MHZ_CLKP2
                                                   _16MHZ
                                         1744   X  #  set   CLK_PARAMS_4MHZ_PLL_LOW 0x0C12314   ; C
                                                   LKS1=CLKS2=48MHZ, CLK_VCO=192MHZ
                                         1745   X  #  set   CLK_PARAMS_4MHZ_CLKB2   0x1824622   ; C
                                                   LKS1=CLKS2=96MHZ, CLK_VCO=192MHZ
                                         1746   X  #  set   CLK_PARAMS_8MHZ_PLL_LOW 0x0612314   ; C
                                                   LKS1=CLKS2=48MHZ, CLK_VCO=192MHZ
                                         1747   X  #  set   CLK_PARAMS_8MHZ_CLKB2   0x0C24622   ; C
                                                   LKS1=CLKS2=96MHZ, CLK_VCO=192MHZ
                                         1748   X  #  set  CLK_PARAMS_16MHZ_PLL_LOW 0x0312314   ; C
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  52
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                                   LKS1=CLKS2=48MHZ, CLK_VCO=192MHZ
                                         1749   X  #  set  CLK_PARAMS_16MHZ_CLKB2   0x0624622   ; C
                                                   LKS1=CLKS2=96MHZ, CLK_VCO=192MHZ
                                         1750   X  #elif CLOCK_SPEED == CPU_48MHZ_CLKP1_16MHZ_CLKP2
                                                   _16MHZ
                                         1751   X  #  set   CLK_PARAMS_4MHZ_PLL_LOW 0x0C13314   ; C
                                                   LKS1=CLKS2=48MHZ, CLK_VCO=192MHZ
                                         1752   X  #  set   CLK_PARAMS_4MHZ_CLKB2   0x1826622   ; C
                                                   LKS1=CLKS2=96MHZ, CLK_VCO=192MHZ
                                         1753   X  #  set   CLK_PARAMS_8MHZ_PLL_LOW 0x0613314   ; C
                                                   LKS1=CLKS2=48MHZ, CLK_VCO=192MHZ
                                         1754   X  #  set   CLK_PARAMS_8MHZ_CLKB2   0x0C26622   ; C
                                                   LKS1=CLKS2=96MHZ, CLK_VCO=192MHZ
                                         1755   X  #  set  CLK_PARAMS_16MHZ_PLL_LOW 0x0313314   ; C
                                                   LKS1=CLKS2=48MHZ, CLK_VCO=192MHZ
                                         1756   X  #  set  CLK_PARAMS_16MHZ_CLKB2   0x0626622   ; C
                                                   LKS1=CLKS2=96MHZ, CLK_VCO=192MHZ
                                         1757   X  #elif CLOCK_SPEED == CPU_56MHZ_CLKP2_14MHZ
                                         1758   X  #  set   CLK_PARAMS_4MHZ_PLL_LOW 0x0E11412   ; C
                                                   LKS1=CLKS2=56MHZ, CLK_VCO=112MHZ
                                         1759   X  #  set   CLK_PARAMS_4MHZ_CLKB2   0x0E11412   ; C
                                                   LKS1=CLKS2=56MHZ, CLK_VCO=112MHZ
                                         1760   X  #  set   CLK_PARAMS_8MHZ_PLL_LOW 0x0711412   ; C
                                                   LKS1=CLKS2=56MHZ, CLK_VCO=112MHZ
                                         1761   X  #  set   CLK_PARAMS_8MHZ_CLKB2   0x0711412   ; C
                                                   LKS1=CLKS2=56MHZ, CLK_VCO=112MHZ
                                         1762   X  #  if CRYSTAL == FREQ_16MHZ
                                         1763   X  #    error Current combination of "CRYSTAL" and
                                                   "CLOCK_SETTING" is not supported.
                                         1764   X  #  endif
                                         1765   X  #elif CLOCK_SPEED == CPU_56MHZ_CLKP2_8MHZ
                                         1766   X  #  set   CLK_PARAMS_4MHZ_PLL_LOW 0x0E11712   ; C
                                                   LKS1=CLKS2=56MHZ, CLK_VCO=112MHZ
                                         1767   X  #  set   CLK_PARAMS_4MHZ_CLKB2   0x0E11712   ; C
                                                   LKS1=CLKS2=56MHZ, CLK_VCO=112MHZ
                                         1768   X  #  set   CLK_PARAMS_8MHZ_PLL_LOW 0x0711712   ; C
                                                   LKS1=CLKS2=56MHZ, CLK_VCO=112MHZ
                                         1769   X  #  set   CLK_PARAMS_8MHZ_CLKB2   0x0711712   ; C
                                                   LKS1=CLKS2=56MHZ, CLK_VCO=112MHZ
                                         1770   X  #  if CRYSTAL == FREQ_16MHZ
                                         1771   X  #    error Current combination of "CRYSTAL" and
                                                   "CLOCK_SETTING" is not supported.
                                         1772   X  #  endif
                                         1773   X  #else
                                         1774   X  #  error The selected setting of "CLOCK_SPEED" i
                                                   s not supported.
                                         1775      #endif
                                         1776
                                         1777      #if CRYSTAL == FREQ_4MHZ
                                         1778      #  set CLK_PARAMS_PLL_LOW    CLK_PARAMS_4MHZ_PLL
                                                   _LOW
                                         1779      #  set CLK_PARAMS_CLKB2      CLK_PARAMS_4MHZ_CLK
                                                   B2
                                         1780      #elif CRYSTAL == FREQ_8MHZ
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  53
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                         1781   X  #  set CLK_PARAMS_PLL_LOW    CLK_PARAMS_8MHZ_PLL
                                                   _LOW
                                         1782   X  #  set CLK_PARAMS_CLKB2      CLK_PARAMS_8MHZ_CLK
                                                   B2
                                         1783   X  #elif CRYSTAL == FREQ_16MHZ
                                         1784   X  #  set CLK_PARAMS_PLL_LOW    CLK_PARAMS_16MHZ_PL
                                                   L_LOW
                                         1785   X  #  set CLK_PARAMS_CLKB2      CLK_PARAMS_16MHZ_CL
                                                   KB2
                                         1786   X  #  else
                                         1787   X  #    error specified crystal frequency ("CRYSTAL
                                                   ") is not supported by this file.
                                         1788      #  endif
                                         1789
                                         1790      #if   CLOCK_OPTIMIZATION == LOW_PLL_OPTIMIZATION
                                         1791   X  #  set CLK_PARAMS    CLK_PARAMS_PLL_LOW
                                         1792      #elif CLOCK_OPTIMIZATION == WAIT_STATE_OPTIMIZAT
                                                   ION
                                         1793      #  set CLK_PARAMS    CLK_PARAMS_CLKB2
                                         1794      #else
                                         1795   X  #  error "CLOCK_OPTIMIZATION" contains an invali
                                                   d setting.
                                         1796      #endif
                                         1797
                                         1798      #set      FREQ_1MHZ       D'1000000L
                                         1799
                                         1800      ;===============================================
                                                   =====================
                                         1801      ; macros to evaluate parameter settings
                                         1802
                                         1803      #define PLL_MULTIPLIER(params) \
                                         1804        ((params & 0xFF00000L) >> 20)
                                         1805
                                         1806      #define CLKB_DIVIDER(params) \
                                         1807        ((params & 0x00F0000L) >> 16)
                                         1808
                                         1809      #define CLKP1_DIVIDER(params) \
                                         1810        ((params & 0x000F000L) >> 12)
                                         1811
                                         1812      #define CLKP2_DIVIDER(params) \
                                         1813        ((params & 0x0000F00L) >>  8)
                                         1814
                                         1815      #define CLKP3_DIVIDER(params) \
                                         1816        ((params & 0x00000F0L) >>  4)
                                         1817
                                         1818      #define VCO_MULTIPLIER(params) \
                                         1819        ((params & 0x000000FL) >>  0)
                                         1820
                                         1821      #define  CLKVCO(params)\
                                         1822        (CRYSTAL * PLL_MULTIPLIER(params) * VCO_MULTIP
                                                   LIER(params))
                                         1823
                                         1824      #define CLKS1_CLKS2(params) \
                                         1825        (CRYSTAL * PLL_MULTIPLIER(params))
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  54
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                         1826
                                         1827      #define CLKB(params) \
                                         1828        (CLKS1_CLKS2(params) / CLKB_DIVIDER(params))
                                         1829
                                         1830      #define CLKP1(params) \
                                         1831        (CLKS1_CLKS2(params) / CLKP1_DIVIDER(params))
                                         1832
                                         1833      #if (CLKP2_CLKP3_SOURCE == CLOCK_PLL)
                                         1834      #define CLKP2(params) \
                                         1835        (CLKS1_CLKS2(params) / CLKP2_DIVIDER(params))
                                         1836      #elif (CLKP2_CLKP3_SOURCE == CLOCK_MAIN)
                                         1837   X  #  define CLKP2(params) \
                                         1838   X       (CRYSTAL / CLKP2_DIVIDER(params))
                                         1839   X  #else
                                         1840   X  #  error Clock source for CLKP2 is not supported
                                                   .
                                         1841      #endif
                                         1842
                                         1843      #if (CLKP2_CLKP3_SOURCE == CLOCK_PLL)
                                         1844      #define CLKP3(params) \
                                         1845        (CLKS1_CLKS2(params) / CLKP3_DIVIDER(params))
                                         1846      #elif (CLKP2_CLKP3_SOURCE == CLOCK_MAIN)
                                         1847   X  #  define CLKP3(params) \
                                         1848   X       (CRYSTAL / CLKP3_DIVIDER(params))
                                         1849   X  #else
                                         1850   X  #  error Clock source for CLKP2 is not supported
                                                   .
                                         1851      #endif
                                         1852
                                         1853      ;===============================================
                                                   =====================
                                         1854      ; debug code
                                         1855
                                         1856      #if 0
                                         1857   X  #  set CPLL CLKS1_CLKS2(CLK_PARAMS)
                                         1858   X  #  set CVCO CLKVCO(CLK_PARAMS)
                                         1859   X  #  set CB   CLKB(CLK_PARAMS)
                                         1860   X  #  set CP1  CLKP1(CLK_PARAMS)
                                         1861   X  #  set CP2  CLKP2(CLK_PARAMS)
                                         1862   X  #  set CP3  CLKP3(CLK_PARAMS)
                                         1863   X  #  error "CLKPLL" CPLL, "CLKVCO" CVCO, "CLKB" CB
                                                   , "CLKP1" CP1, "CLKP2" CP2, "CLKP3" CP3
                                         1864      #endif
                                         1865
                                         1866      ;===============================================
                                                   =====================
                                         1867      ; protect all devices from common illegal settin
                                                   gs
                                         1868
                                         1869
                                         1870      #if (CLKS1_CLKS2(CLK_PARAMS) > (96 * FREQ_1MHZ))
                                         1871   X  #  error The current clock setting ("CLOCK_SPEED
                                                   ") is not allowed for the selected device.
                                         1872      #endif
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  55
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                         1873      #if ((CLKB(CLK_PARAMS) > (56 * FREQ_1MHZ))) || (
                                                   (CLKP1(CLK_PARAMS) > (56 * FREQ_1MHZ)))
                                         1874   X  #  error The current clock setting ("CLOCK_SPEED
                                                   ") is not allowed for the selected device.
                                         1875      #endif
                                         1876      #if (CLKP2(CLK_PARAMS) > (32 * FREQ_1MHZ))
                                         1877   X  #  error The current clock setting ("CLOCK_SPEED
                                                   ") is not allowed for the selected device.
                                         1878      #endif
                                         1879
                                         1880      #if (CLKVCO(CLK_PARAMS) < (50 * FREQ_1MHZ))
                                         1881   X  #  error The current clock setting ("CLOCK_SPEED
                                                   ") is not allowed for the selected device.
                                         1882      #endif
                                         1883      #if (CLKVCO(CLK_PARAMS) > (200 * FREQ_1MHZ))
                                         1884   X  #  error The current clock setting ("CLOCK_SPEED
                                                   ") is not allowed for the selected device.
                                         1885      #endif
                                         1886      #if (VCO_MULTIPLIER(CLK_PARAMS) & 1)
                                         1887   X  #  error The current clock setting ("CLOCK_SPEED
                                                   ") is not allowed for the selected device.
                                         1888      #endif
                                         1889      #if (!(VCO_MULTIPLIER(CLK_PARAMS) & 0xFE))
                                         1890   X  #  error The current clock setting ("CLOCK_SPEED
                                                   ") is not allowed for the selected device.
                                         1891      #endif
                                         1892
                                         1893      ; protect certain devices from specific illegal
                                                   settings
                                         1894
                                         1895      #if (SERIES == MB96330)
                                         1896      #  if ((CLKB(CLK_PARAMS) > (48 * FREQ_1MHZ))) ||
                                                    ((CLKP1(CLK_PARAMS) > (48 * FREQ_1MHZ)))
                                         1897   X  #    error The current clock setting ("CLOCK_SPE
                                                   ED") is not allowed for the selected device.
                                         1898      #  endif
                                         1899      #  if (CLKP3(CLK_PARAMS) > (48 * FREQ_1MHZ))
                                         1900   X  #    error The current clock setting ("CLOCK_SPE
                                                   ED") is not allowed for the selected device.
                                         1901      #  endif
                                         1902      #endif ; (SERIES == MB96330)
                                         1903
                                         1904      #if (SERIES == MB96340)
                                         1905   X  #  if (
                                                                                  \
                                         1906   X          (DEVICE == MB96348HxA) ||
                                                                                  \
                                         1907   X          (DEVICE == MB96348TxA) ||
                                                                                  \
                                         1908   X          (DEVICE == MB96348CxA)
                                                                                  \
                                         1909   X        )
                                         1910   X  #    if (CLKS1_CLKS2(CLK_PARAMS) > (56 * FREQ_1M
                                                   HZ))
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  56
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                         1911   X  #      error The current clock setting ("CLOCK_S
                                                   PEED" and "CLOCK_OPTIMIZATION") is not allowed f
                                                   or the selected device.
                                         1912   X  #    endif
                                         1913   X  #    if (CLKP2(CLK_PARAMS) > (14 * FREQ_1MHZ))
                                         1914   X  #      error The current clock setting ("CLOCK_S
                                                   PEED") is not allowed for the selected device.
                                         1915   X  #    endif
                                         1916   X  #  elif (
                                                                                  \
                                         1917   X          (DEVICE == MB96346RxA) ||
                                                                                  \
                                         1918   X          (DEVICE == MB96346YxA) ||
                                                                                  \
                                         1919   X          (DEVICE == MB96346AxA) ||
                                                                                  \
                                         1920   X          (DEVICE == MB96347RxA) ||
                                                                                  \
                                         1921   X          (DEVICE == MB96347YxA) ||
                                                                                  \
                                         1922   X          (DEVICE == MB96347AxA) ||
                                                                                  \
                                         1923   X          (DEVICE == MB96348RxA) ||
                                                                                  \
                                         1924   X          (DEVICE == MB96348YxA) ||
                                                                                  \
                                         1925   X          (DEVICE == MB96348AxA) ||
                                                                                  \
                                         1926   X          (DEVICE == MB96346RxB) ||
                                                                                  \
                                         1927   X          (DEVICE == MB96346YxB) ||
                                                                                  \
                                         1928   X          (DEVICE == MB96346AxB) ||
                                                                                  \
                                         1929   X          (DEVICE == MB96347RxB) ||
                                                                                  \
                                         1930   X          (DEVICE == MB96347YxB) ||
                                                                                  \
                                         1931   X          (DEVICE == MB96347AxB) ||
                                                                                  \
                                         1932   X          (DEVICE == MB96348RxB) ||
                                                                                  \
                                         1933   X          (DEVICE == MB96348YxB) ||
                                                                                  \
                                         1934   X          (DEVICE == MB96348AxB)
                                                                                  \
                                         1935   X        )
                                         1936   X  #    if (CLKS1_CLKS2(CLK_PARAMS) > (74 * FREQ_1M
                                                   HZ))
                                         1937   X  #      error The current clock setting ("CLOCK_S
                                                   PEED" and "CLOCK_OPTIMIZATION") is not allowed f
                                                   or the selected device.
                                         1938   X  #    endif
                                         1939   X  #    if (CLKP2(CLK_PARAMS) > (28 * FREQ_1MHZ))
                                         1940   X  #      error The current clock setting ("CLOCK_S
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  57
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                                   PEED") is not allowed for the selected device.
                                         1941   X  #    endif
                                         1942   X  #  else
                                         1943   X  #    if (CLKP2(CLK_PARAMS) > (28 * FREQ_1MHZ))
                                         1944   X  #      error The current clock setting ("CLOCK_S
                                                   PEED") is not allowed for the selected device.
                                         1945   X  #    endif
                                         1946   X  #  endif
                                         1947      #endif ; (SERIES == MB96340)
                                         1948
                                         1949      #if (SERIES == MB96370)
                                         1950   X  #  if (CLKS1_CLKS2(CLK_PARAMS) > (80 * FREQ_1MHZ
                                                   ))
                                         1951   X  #    error The current clock setting ("CLOCK_SPE
                                                   ED" and "CLOCK_OPTIMIZATION") is not allowed for
                                                    the selected device.
                                         1952   X  #  endif
                                         1953   X  #  if ((CLKB(CLK_PARAMS) > (40 * FREQ_1MHZ))) ||
                                                    ((CLKP1(CLK_PARAMS) > (40 * FREQ_1MHZ)))
                                         1954   X  #    error The current clock setting ("CLOCK_SPE
                                                   ED") is not allowed for the selected device.
                                         1955   X  #  endif
                                         1956      #endif ; (SERIES == MB96370)
                                         1957
                                         1958      #if (SERIES == MB96380)
                                         1959   X  #  if (
                                                                                  \
                                         1960   X          (DEVICE == MB96385RxA) ||
                                                                                  \
                                         1961   X          (DEVICE == MB96385YxA) ||
                                                                                  \
                                         1962   X          (DEVICE == MB96388HxA) ||
                                                                                  \
                                         1963   X          (DEVICE == MB96388HxB) ||
                                                                                  \
                                         1964   X          (DEVICE == MB96389RxB)
                                                                                  \
                                         1965   X        )
                                         1966   X  #    if (CLKS1_CLKS2(CLK_PARAMS) > (80 * FREQ_1M
                                                   HZ))
                                         1967   X  #      error The current clock setting ("CLOCK_S
                                                   PEED" and "CLOCK_OPTIMIZATION") is not allowed f
                                                   or the selected device.
                                         1968   X  #    endif
                                         1969   X  #    if ((CLKB(CLK_PARAMS) > (40 * FREQ_1MHZ)))
                                                   || ((CLKP1(CLK_PARAMS) > (40 * FREQ_1MHZ)))
                                         1970   X  #      error The current clock setting ("CLOCK_S
                                                   PEED") is not allowed for the selected device.
                                         1971   X  #    endif
                                         1972   X  #  elif (
                                                                                  \
                                         1973   X          (DEVICE == MB96386RxA) ||
                                                                                  \
                                         1974   X          (DEVICE == MB96386YxA) ||
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  58
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                                                                  \
                                         1975   X          (DEVICE == MB96387RxA) ||
                                                                                  \
                                         1976   X          (DEVICE == MB96387YxA) ||
                                                                                  \
                                         1977   X          (DEVICE == MB96386RxB) ||
                                                                                  \
                                         1978   X          (DEVICE == MB96386YxB) ||
                                                                                  \
                                         1979   X          (DEVICE == MB96387RxB) ||
                                                                                  \
                                         1980   X          (DEVICE == MB96387YxB)
                                                                                  \
                                         1981   X        )
                                         1982   X  #    if (CLKS1_CLKS2(CLK_PARAMS) > (74 * FREQ_1M
                                                   HZ))
                                         1983   X  #      error The current clock setting ("CLOCK_S
                                                   PEED" and "CLOCK_OPTIMIZATION") is not allowed f
                                                   or the selected device.
                                         1984   X  #    endif
                                         1985   X  #    if (CLKP2(CLK_PARAMS) > (28 * FREQ_1MHZ))
                                         1986   X  #      error The current clock setting ("CLOCK_S
                                                   PEED") is not allowed for the selected device.
                                         1987   X  #    endif
                                         1988   X  #  elif (
                                                                                  \
                                         1989   X          (DEVICE == MB96384RxA) ||
                                                                                  \
                                         1990   X          (DEVICE == MB96384YxA)
                                                                                  \
                                         1991   X        )
                                         1992   X      ; nothing - basic check from above is suffic
                                                   ient
                                         1993   X  #  else
                                         1994   X  #    error The selected device is not supported
                                                   in this version.
                                         1995   X  #  endif
                                         1996      #endif ; (SERIES == MB96380)
                                         1997
                                         1998      #if (SERIES == MB96390)
                                         1999   X  #  if (
                                                                                  \
                                         2000   X          (DEVICE == MB96395RxA)
                                                                                  \
                                         2001   X        )
                                         2002   X  #    if (CLKS1_CLKS2(CLK_PARAMS) > (80 * FREQ_1M
                                                   HZ))
                                         2003   X  #      error The current clock setting ("CLOCK_S
                                                   PEED" and "CLOCK_OPTIMIZATION") is not allowed f
                                                   or the selected device.
                                         2004   X  #    endif
                                         2005   X  #    if ((CLKP1(CLK_PARAMS) > (40 * FREQ_1MHZ)))
                                                    || ((CLKP1(CLK_PARAMS) > (40 * FREQ_1MHZ)))
                                         2006   X  #      error The current clock setting ("CLOCK_S
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  59
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                                   PEED") is not allowed for the selected device.
                                         2007   X  #    endif
                                         2008   X  #  endif
                                         2009      #endif ; (SERIES == MB96390)
                                         2010
                                         2011
                                         2012      ;===============================================
                                                   =====================
                                         2013      ; define register settings
                                         2014
                                         2015      #if SERIES == MB96330
                                         2016      ;  CLKP3 divider shall be set only if CLKP3 is a
                                                   vailable on the device.
                                         2017      #  define PLLCR_SETTING(params)
                                                                                  \
                                         2018           (
                                                                                  \
                                         2019            ((CLKP3_DIVIDER(params)  - 1) << 8)
                                                                                  \
                                         2020            |
                                                                                  \
                                         2021            ((VCO_MULTIPLIER(params) - 2) << 4)
                                                                                  \
                                         2022            |
                                                                                  \
                                         2023            ((PLL_MULTIPLIER(params) - 1) << 0)
                                                                                  \
                                         2024           )
                                         2025      #else
                                         2026   X  ;  CLKP3 divider shall be set to B'000 if CLKP3
                                                   is not available on the device.
                                         2027   X  #  define PLLCR_SETTING(params)
                                                                                  \
                                         2028   X       (
                                                                                  \
                                         2029   X        ((VCO_MULTIPLIER(params) - 2) << 4)
                                                                                  \
                                         2030   X        |
                                                                                  \
                                         2031   X        ((PLL_MULTIPLIER(params) - 1) << 0)
                                                                                  \
                                         2032   X       )
                                         2033      #endif
                                         2034
                                         2035      #define CKFCR_SETTING(params)
                                                                                  \
                                         2036        (
                                                                                  \
                                         2037          ((CLKP2_DIVIDER(params) - 1) << 12)
                                                                                  \
                                         2038          |
                                                                                  \
                                         2039          ((CLKP1_DIVIDER(params) - 1) <<  8)
                                                                                  \
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  60
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                         2040          |
                                                                                  \
                                         2041          ((CLKB_DIVIDER(params)  - 1) <<  4)
                                                                                  \
                                         2042          |
                                                                                  \
                                         2043          1
                                                                                  \
                                         2044        )
                                         2045
                                         2046      #define CKSR_SETTING(CLKS1_SOURCE, CLKS2_SOURCE)
                                                                                  \
                                         2047        (
                                                                                  \
                                         2048          0xF0
                                                                                  \
                                         2049          |
                                                                                  \
                                         2050          ((CLKS2_SOURCE & 0x3)
                                                                        << 2)     \
                                         2051          |
                                                                                  \
                                         2052          ((CLKS1_SOURCE & 0x3)
                                                                        << 0)     \
                                         2053        )
                                         2054
                                         2055      ;===============================================
                                                   =====================
                                         2056      ; define flash timings
                                         2057
                                         2058      #set MTCR_DEFAULT         0x0239
                                         2059
                                         2060      #if   (CLKS1_CLKS2(CLK_PARAMS) <= ( 25 * FREQ_1M
                                                   HZ)) && (CLKB(CLK_PARAMS) <= ( 25 * FREQ_1MHZ))
                                         2061   X  #  set MTCR_INITIAL       0x0239
                                         2062      #elif (CLKS1_CLKS2(CLK_PARAMS) <= ( 32 * FREQ_1M
                                                   HZ)) && (CLKB(CLK_PARAMS) <= ( 32 * FREQ_1MHZ))
                                         2063   X  #  set MTCR_INITIAL       0x2129
                                         2064      #elif (CLKS1_CLKS2(CLK_PARAMS) <= ( 56 * FREQ_1M
                                                   HZ)) && (CLKB(CLK_PARAMS) <= ( 56 * FREQ_1MHZ))
                                         2065   X  #  set MTCR_INITIAL       0x233A
                                         2066      #else
                                         2067      #  set MTCR_INITIAL       0x6E3D
                                         2068      #endif
                                         2069
                                         2070      #if (CLKB_DIVIDER(CLK_PARAMS) == 2)
                                         2071      #  if   (CLKS1_CLKS2(CLK_PARAMS) <= ( 32 * FREQ_
                                                   1MHZ)) && (CLKB(CLK_PARAMS) <= ( 16 * FREQ_1MHZ)
                                                   )
                                         2072   X  #    set MTCR_STABILIZED  0x2128
                                         2073      #  elif (((( 20 * FREQ_1MHZ) <= CLKS1_CLKS2(CLK_
                                                   PARAMS)) && (CLKS1_CLKS2(CLK_PARAMS) <= ( 50 * F
                                                   REQ_1MHZ)) )\
                                         2074           &&  ((( 10 * FREQ_1MHZ) <= CLKB(CLK_PARAMS)
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  61
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                                   )        && (CLKB(CLK_PARAMS)        <= ( 28 * F
                                                   REQ_1MHZ))))
                                         2075   X  #    set MTCR_STABILIZED  0x2208
                                         2076      #  elif (CLKS1_CLKS2(CLK_PARAMS) <= ( 84 * FREQ_
                                                   1MHZ)) && (CLKB(CLK_PARAMS) <= ( 42 * FREQ_1MHZ)
                                                   )
                                         2077   X  #    set MTCR_STABILIZED  0x4C09
                                         2078      #  elif (((( 20 * FREQ_1MHZ) <= CLKS1_CLKS2(CLK_
                                                   PARAMS)) && (CLKS1_CLKS2(CLK_PARAMS) <= (100 * F
                                                   REQ_1MHZ)) )\
                                         2079           &&  ((( 10 * FREQ_1MHZ) <= CLKB(CLK_PARAMS)
                                                   )        && (CLKB(CLK_PARAMS)        <= ( 50 * F
                                                   REQ_1MHZ))))
                                         2080      #    set MTCR_STABILIZED  0x6B09
                                         2081      #  else
                                         2082   X  #    set MTCR_STABILIZED  MTCR_INITIAL
                                         2083      #  endif
                                         2084      #elif (CLKB_DIVIDER(CLK_PARAMS) > 2)
                                         2085   X  #  if   (CLKS1_CLKS2(CLK_PARAMS) <= ( 32 * FREQ_
                                                   1MHZ)) && (CLKB(CLK_PARAMS) <= ( 16 * FREQ_1MHZ)
                                                   )
                                         2086   X  #    set MTCR_STABILIZED  0x2128
                                         2087   X  #  else
                                         2088   X  #    set MTCR_STABILIZED  MTCR_INITIAL
                                         2089   X  #  endif
                                         2090   X  #else ; if (CLKB_DIVIDER(CLK_PARAMS) >= 2)
                                         2091   X  #  set   MTCR_STABILIZED  MTCR_INITIAL
                                         2092      #endif ; else (CLKB_DIVIDER(CLK_PARAMS) == 2)
                                         2093
                                         2094      ;===============================================
                                                   =====================
                                         2095      ; PLL startup sequence
                                         2096
CO 000010 73DF06041701                   2097                MOVW PLLCR, # PLLCR_SETTING(CLK_PARAMS
                                                   )
CO 000016 73DF04041151                   2098                MOVW CKFCR, # CKFCR_SETTING(CLK_PARAMS
                                                   )
CO 00001C 71DF2C04F6                     2099                MOV  VRCR,  #0xF6         ; 1,9V core
                                                   voltage
                                         2100      #if MTCR_INITIAL != MTCR_DEFAULT
CO 000021 71DFF10370                     2101                MOV  MCSRA, #0x70         ; 1,9V flash
                                                    voltage
CO 000026 73DFF2033D6E                   2102                MOVW MTCRA, # MTCR_INITIAL
                                         2103      #  if FLASH_B_AVAILABLE == ON
                                         2104   X            MOV  MCSRB, #0x70         ; 1,9V flash
                                                    voltage
                                         2105   X            MOVW MTCRB, # MTCR_INITIAL
                                         2106      #  endif ; FLASH_B_AVAILABLE == ON
                                         2107      #endif
CO 00002C 71DF0104FA                     2108                MOV  CKSR,  # CKSR_SETTING(CLKB_CLKP1_
                                                   SOURCE, CLKP2_CLKP3_SOURCE)
                                         2109
                                         2110      ;===============================================
                                                   =====================
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  62
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                         2111      ; 6.6   Set external bus configuaration
                                         2112      ;===============================================
                                                   =====================
                                         2113
                                         2114      #if BUSMODE != SINGLE_CHIP         ; ext bus use
                                                   d
                                         2115   X
                                         2116   X  ; check if non-multiplexed mode is available for
                                                    device
                                         2117   X  #  if (ADDRESSMODE == NON_MULTIPLEXED) && \
                                         2118   X     (                                      \
                                         2119   X      (SERIES == MB96320)                   \
                                         2120   X      ||                                    \
                                         2121   X      (SERIES == MB96340)                   \
                                         2122   X      ||                                    \
                                         2123   X      (SERIES == MB96350)                   \
                                         2124   X     )
                                         2125   X  #    error Non-multiplexed external bus is not a
                                                   vailable for the selected device.
                                         2126   X  #  endif
                                         2127   X
                                         2128   X             MOV  EBCF, #((HOLD_REQ << 7) | (EXT_R
                                                   EADY << 6) | (EXT_CLOCK_ENABLE << 5) | (EXT_CLOC
                                                   K_INVERT << 4) | (EXT_CLOCK_SUSPEND << 3) | EXT_
                                                   CLOCK_DIVISION)
                                         2129   X             MOV  EBAE0,#ADDR_PINS_7_0
                                         2130   X             MOV  EBAE1,#ADDR_PINS_15_8
                                         2131   X             MOV  EBAE2,#ADDR_PINS_23_16
                                         2132   X             MOV  EBCS, #((ADDRESS_STROBE_LVL << 6
                                                   ) | (ADDRESS_STROBE << 5) | (READ_STROBE << 4) |
                                                    (HIGH_WRITE_STROBE << 3) | (LOW_WRITE_STROBE <<
                                                    2) | (HIGH_BYTE_SIGNAL << 1) | LOW_BYTE_SIGNAL)
                                         2133   X             MOV  EAS2, #CS2_START
                                         2134   X             MOV  EAS3, #CS3_START
                                         2135   X             MOV  EAS4, #CS4_START
                                         2136   X             MOV  EAS5, #CS5_START
                                         2137   X             MOVW EACL0,#CS0_CONFIG
                                         2138   X             MOVW EACL1,#CS1_CONFIG
                                         2139   X             MOVW EACL2,#CS2_CONFIG
                                         2140   X             MOVW EACL3,#CS3_CONFIG
                                         2141   X             MOVW EACL4,#CS4_CONFIG
                                         2142   X             MOVW EACL5,#CS5_CONFIG
                                         2143   X             MOV  EBM,  #((ADDRESSMODE << 7) | ((B
                                                   USMODE-1) << 6) | (CHIP_SELECT5 << 5) | (CHIP_SE
                                                   LECT4 << 4) | (CHIP_SELECT3 << 3) | (CHIP_SELECT
                                                   2 << 2) | (CHIP_SELECT1 << 1) | CHIP_SELECT0) ;
                                                   set address mode, ROM access
                                         2144   X
                                         2145   X  #  if (SERIES == MB96320) || (SERIES == MB96330)
                                                    || (SERIES == MB96340) || (SERIES == MB96350)
                                         2146   X             MOV  PIER00,#0xFF
                                         2147   X  #    if (CS0_CONFIG & 0x0080) == 0 || (CS1_CONFI
                                                   G & 0x0080) == 0 || (CS2_CONFIG & 0x0080) == 0 |
                                                   | (CS3_CONFIG & 0x0080) == 0 || (CS4_CONFIG & 0x
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  63
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                                   0080) == 0 || (CS5_CONFIG & 0x0080) == 0
                                         2148   X             MOV  PIER01,#0xFF
                                         2149   X  #    endif
                                         2150   X  #    if HOLD_REQ == ON
                                         2151   X             SETB PIER03:4
                                         2152   X  #    endif
                                         2153   X  #    if EXT_READY == ON
                                         2154   X             SETB PIER03:6
                                         2155   X  #    endif
                                         2156   X
                                         2157   X  #  elif (SERIES == MB96370) || (SERIES == MB9638
                                                   0)
                                         2158   X             MOV  PIER01,#0xFF
                                         2159   X  #    if (CS0_CONFIG & 0x0080) == 0 || (CS1_CONFI
                                                   G & 0x0080) == 0 || (CS2_CONFIG & 0x0080) == 0 |
                                                   | (CS3_CONFIG & 0x0080) == 0 || (CS4_CONFIG & 0x
                                                   0080) == 0 || (CS5_CONFIG & 0x0080) == 0
                                         2160   X             MOV  PIER02,#0xFF
                                         2161   X  #    endif
                                         2162   X  #    if HOLD_REQ == ON
                                         2163   X             SETB PIER12:7
                                         2164   X  #    endif
                                         2165   X  #    if EXT_READY == ON
                                         2166   X             SETB PIER00:2
                                         2167   X  #    endif
                                         2168   X  #  elif (SERIES == MB96310) || (SERIES == MB9639
                                                   0) || (SERIES == MB96910)
                                         2169   X  #    error External bus is not available for the
                                                    selected device.
                                         2170   X  #  endif
                                         2171   X
                                         2172      #endif
                                         2173
                                         2174      #if BUSMODE == INTROM_EXTBUS     ; EXTBUS and IN
                                                   TROM/EXTROM
                                         2175   X  #  if ROMMIRROR == OFF && CONSTDATA == ROMCONST
                                         2176   X  #    error Mirror function must be ON to mirror
                                                   internal ROM
                                         2177   X  #  endif
                                         2178      #endif
                                         2179
          = 000000F7                     2180      ROMM_CONFIG    .EQU     ((MIRROR_BANK << 4) | (M
                                                   IRROR_SIZE << 1) | (ROMMIRROR))
CO 000031 71DFAE03F7                     2181                 MOV  ROMM, #ROMM_CONFIG
                                         2182
                                         2183
                                         2184      ;===============================================
                                                   =====================
                                         2185      ; 6.7   Prepare stacks and set the default stack
                                                    type
                                         2186      ;===============================================
                                                   =====================
                                         2187      ;
                                         2188      ; Note:
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  64
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                         2189      ; After reset the system stack is set to the end
                                                    of internal RAM
                                         2190      ; (default location). This stack can already be
                                                   used by a monitor debugger
                                         2191      ; that uses BootROM support (e.g. EUROScope, but
                                                    not emulator).
                                         2192      ; To prevent overwriting of initialized global v
                                                   ariables by stack contents,
                                         2193      ; the stack has to be relocated to its final des
                                                   tination before
                                         2194      ; initialization of global variables.
                                         2195
                                         2196      ; Use word aligned stack section. Stack symbols
                                                   are ignored.
                                         2197      #define SSTACK_L    ((SSTACK + 1) & ~1)
                                         2198      #define SSTACK_H    ((SSTACK + SIZEOF(SSTACK)) &
                                                    ~1)
                                         2199      #define SSTACK_BNK  BNKSEC SSTACK
                                         2200
                                         2201      #define USTACK_L    ((USTACK + 1) & ~1)
                                         2202      #define USTACK_H    ((USTACK + SIZEOF(USTACK)) &
                                                    ~1)
                                         2203      #define USTACK_BNK  BNKSEC USTACK
                                         2204
CO 000036 24DF                           2205                AND  CCR,#H'DF            ; clear syst
                                                   em stack flag
CO 000038 4B00000000                S    2206                MOVL A, #USTACK_H
CO 00003D 47                             2207                MOVW SP,A                 ; load offse
                                                   t of stack top to pointer
CO 00003E 4200                      S    2208                MOV  A, #USTACK_BNK       ; load bank
                                                   of stack start address to A
CO 000040 6F13                           2209                MOV  USB, A               ; set bank
                                         2210
                                         2211      #if STACK_FILL == ON                ; preset the
                                                    stack
CO 000042 4B00000000                S    2212                MOVL A, #(USTACK_L)       ; load start
                                                    stack address to A
CO 000047 4AAA55                         2213                MOVW A, #STACK_PATTERN    ; AL -> AH,
                                                   pattern in AL
CO 00004A A80000                    S    2214                MOVW RW0, #(USTACK_H - USTACK_L) / 2 ;
                                                    get word count
CO 00004D 6EE3                           2215                FILSWI    SPB             ; write patt
                                                   ern to stack
                                         2216      #endif
                                         2217
CO 00004F 2520                           2218                OR   CCR,#H'20            ; set System
                                                    stack flag
CO 000051 4B00000000                S    2219                MOVL A, #SSTACK_H
CO 000056 47                             2220                MOVW SP,A                 ; load offse
                                                   t of stack top to pointer
                                         2221      ;!!!!!!!!!!!!!!!!!!!!!!!!!!!!ATTENTION!!!!!!!!!!
                                                   !!!!!!!!!!!!!!!!!!!!!
                                         2222      ; When monitor debugger that uses BootROM suppor
                                                   t (e.g. EUROScope,
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  65
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                         2223      ; but not emulator) is used and system stack is
                                                   located outside
                                         2224      ; bank 0 (e.g. on external RAM) no break shall b
                                                   e issued on the
                                         2225      ; following two instructions. I.e The following
                                                   two lines shall
                                         2226      ; neither be stepped on by debugger step operati
                                                   on, nor shall a
                                         2227      ; break point be set on that line.
                                         2228      ; Setting a break point to the instruction after
                                                    the next two
                                         2229      ; lines is always safe.
CO 000057 4200                      S    2230                MOV  A, #SSTACK_BNK       ; load bank
                                                   of stack start address to A
CO 000059 6F12                           2231                MOV  SSB, A               ; set bank
                                         2232      ;!!!!!!!!!!!!!!!!!!!!!!!!!!!!ATTENTION!!!!!!!!!!
                                                   !!!!!!!!!!!!!!!!!!!!!
                                         2233
                                         2234      #if STACK_FILL == ON                ; preset the
                                                    stack
CO 00005B 4B00000000                S    2235                MOVL A, #(SSTACK_L)       ; load start
                                                    stack address to A
CO 000060 4AAA55                         2236                MOVW A, #STACK_PATTERN    ; AL -> AH,
                                                   pattern in AL
CO 000063 A80000                    S    2237                MOVW RW0, #(SSTACK_H - SSTACK_L) / 2;
                                                   get byte count
CO 000066 6EE3                           2238                FILSWI    SPB             ; write patt
                                                   ern to stack
                                         2239      #endif
                                         2240
                                         2241      #if STACKUSE == USRSTACK
                                         2242   X            AND  CCR,#H'DF            ; clear syst
                                                   em stack flag
                                         2243      #endif
                                         2244
                                         2245
                                         2246      ;   The following macro is needed because of the
                                                    AUTOMODEL option. If the
                                         2247      ;   model is not known while assembling the modu
                                                   le, one has to expect
                                         2248      ;   completion of streaminit() by RET or RETP. B
                                                   ecause RET removes 2 bytes
                                         2249      ;   from stack and RETP removes 4 bytes from sta
                                                   ck, SP is reloaded.
                                         2250
                                         2251      #  macro RELOAD_SP
                                         2252
                                         2253      #if STACKUSE == USRSTACK
                                         2254                MOVW A, #USTACK_H
                                         2255      #else
                                         2256                MOVW A, #SSTACK_H
                                         2257      #endif
                                         2258                MOVW SP,A
                                         2259      #  endm
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  66
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                         2260
                                         2261      ;===============================================
                                                   =====================
                                         2262      ; 6.8   Copy initial values to data areas.
                                         2263      ;===============================================
                                                   =====================
                                         2264      ;
                                         2265      ; Each C-module has its own __far INIT section.
                                                   The names are generic.
                                         2266      ; DCONST_module contains the initializers for th
                                                   e far data of the one
                                         2267      ; module. INIT_module reserves the RAM area, whi
                                                   ch has to be loaded
                                         2268      ; with the data from DCONST_module. ("module" is
                                                    the name of the *.c
                                         2269      ; file)
                                         2270      ; All separated DCONST_module/INIT_module areas
                                                   are described in
                                         2271      ; DTRANS section by start addresses and length o
                                                   f each far section.
                                         2272      ;   0000 1. source address (ROM)
                                         2273      ;   0004 1. destination address (RAM)
                                         2274      ;   0008 length of sections 1
                                         2275      ;   000A 2. source address  (ROM)
                                         2276      ;   000E 2. destination address (RAM)
                                         2277      ;   0012 length of sections 2
                                         2278      ;   0014 3. source address ...
                                         2279      ; In addition the start-up file adds the descrip
                                                   tors of the __near
                                         2280      ; sections to this table. The order of the descr
                                                   iptors in this table
                                         2281      ; depends on the linkage order.
                                         2282      ;
                                         2283      ; Note: Sections cannot exceed bank boundaries.
                                         2284      ;===============================================
                                                   =====================
CO 000068 4B00000000                S    2285                MOVL A, #DTRANS          ; get address
                                                    of table
CO 00006D 71A4                           2286                MOVL RL2, A              ; store addre
                                                   ss in RL2 (RW4/RW5)
CO 00006F 6019                           2287                BRA  LABEL2              ; branch to l
                                                   oop condition
CO 000071                                2288      LABEL1:
CO 000071 6F4C06                         2289                MOVW A, @RL2+6           ; get bank of
                                                    destination
CO 000074 6F10                           2290                MOV  DTB, A              ; save dest b
                                                   ank in DTB
CO 000076 6F4C02                         2291                MOVW A, @RL2+2           ; get source
                                                   bank
CO 000079 6F11                           2292                MOV  ADB, A              ; save source
                                                    bank in ADB
CO 00007B 6F4C08                         2293                MOVW A, @RL2+8           ; number of b
                                                   ytes to copy -> A
CO 00007E 98                             2294                MOVW RW0, A              ; number of b
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  67
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                                   ytes to copy -> RW0
CO 00007F 6F4C04                         2295                MOVW A, @RL2+4           ; move destin
                                                   ation addr in AL
CO 000082 6F4C00                         2296                MOVW A, @RL2             ; AL -> AH, s
                                                   rc addr -> AL
CO 000085 6E06                           2297                MOVSI DTB, ADB           ; copy data
CO 000087 DA                             2298                MOVN A, #10              ; length of o
                                                   ne table entry is 10
CO 000088 7704                           2299                ADDW RW4, A              ; set pointer
                                                    to next table entry
CO 00008A                                2300      LABEL2:
CO 00008A 8C                             2301                MOVW A, RW4              ; get address
                                                    of next block
CO 00008B 3B0000                    S    2302                CMPW A, #DTRANS + SIZEOF (DTRANS) ; al
                                                   l blocks processed ?
CO 00008E F1E1                           2303                BNE  LABEL1              ; if not, bra
                                                   nch
                                         2304
                                         2305      ;===============================================
                                                   =====================
                                         2306      ; 6.9   Clear uninitialized data areas to zero
                                         2307      ;===============================================
                                                   =====================
                                         2308      ;
                                         2309      ; Each C-module has its own __far DATA section.
                                                   The names are generic.
                                         2310      ; DATA_module contains the reserved area (RAM) t
                                                   o be cleared.
                                         2311      ; ("module" is the name of the *.c file)
                                         2312      ; All separated DATA_module areas are described
                                                   in DCLEAR section by
                                         2313      ; start addresses and length of all far section.
                                         2314      ;   0000 1. section address (RAM)
                                         2315      ;   0004 length of section 1
                                         2316      ;   0006 2. section address (RAM)
                                         2317      ;   000A length of section 2
                                         2318      ;   000C 3. section address (RAM)
                                         2319      ;   0010 length of section 3 ...
                                         2320      ; In addition the start-up file adds the descrip
                                                   tors of the __near
                                         2321      ; sections to this table. The order of the descr
                                                   iptors in this table
                                         2322      ; depends on the linkage order.
                                         2323      ;===============================================
                                                   =====================
CO 000090 4200                      S    2324                MOV  A, #BNKSEC DCLEAR   ; get bank of
                                                    table
CO 000092 6F10                           2325                MOV  DTB, A              ; store bank
                                                   in DTB
CO 000094 A90000                    S    2326                MOVW RW1, #DCLEAR        ; get start o
                                                   ffset of table
CO 000097 6010                           2327                BRA  LABEL4              ; branch to l
                                                   oop condition
CO 000099                                2328      LABEL3:
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  68
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

CO 000099 729102                         2329                MOV  A, @RW1+2           ; get section
                                                    bank
CO 00009C 6F11                           2330                MOV  ADB, A              ; save sectio
                                                   n bank in ADB
CO 00009E 7B1104                         2331                MOVW RW0, @RW1+4         ; number of b
                                                   ytes to copy -> RW0
CO 0000A1 7389                           2332                MOVW A, @RW1             ; move sectio
                                                   n addr in AL
CO 0000A3 D0                             2333                MOVN A, #0               ; AL -> AH, i
                                                   nit value -> AL
CO 0000A4 6EC2                           2334                FILSI     ADB            ; write 0 to
                                                   section
CO 0000A6 D6                             2335                MOVN A, #6               ; length of o
                                                   ne table entry is 6
CO 0000A7 7701                           2336                ADDW RW1, A              ; set pointer
                                                    to next table entry
CO 0000A9                                2337      LABEL4:
CO 0000A9 89                             2338                MOVW A, RW1              ; get address
                                                    of next block
CO 0000AA 390000                    S    2339                SUBW A, #DCLEAR          ; sub address
                                                    of first block
CO 0000AD 3B0000                    S    2340                CMPW A, #SIZEOF (DCLEAR) ; all blocks
                                                   processed ?
CO 0000B0 F1E7                           2341                BNE  LABEL3              ; if not, bra
                                                   nch
                                         2342
                                         2343
                                         2344
                                         2345      ;===============================================
                                                   =====================
                                         2346      ; 6.10  Set Data Bank Register (DTB) and Direct
                                                   Page Register (DPR)
                                         2347      ;===============================================
                                                   =====================
CO 0000B2 4200                      S    2348                MOV  A,#BNKSEC DATA          ; User da
                                                   ta bank offset
CO 0000B4 6F10                           2349                MOV  DTB,A
                                         2350
CO 0000B6 4200                      R    2351                MOV  A,#PAGE DIRDATA_S       ; User di
                                                   rect page
CO 0000B8 6F14                           2352                MOV  DPR,A
                                         2353
                                         2354      ;===============================================
                                                   =====================
                                         2355      ; 6.11  ICU register initialization workaround
                                         2356      ;===============================================
                                                   =====================
                                         2357
                                         2358      #if (UART_SCANNING == ON)
                                         2359   X  #  if (((SERIES == MB96320) && (DEVICE < 3)) ||
                                                   \
                                         2360   X         ((SERIES == MB96350) && (DEVICE < 3)))
                                         2361   X            MOVN A, #0
                                         2362   X            MOV  TCCSL2, A
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  69
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                         2363   X            MOV  TCCSL3, A
                                         2364   X            MOV  ICE67, A
                                         2365   X            MOV  ICE89, A
                                         2366   X            MOV  ICE1011, A
                                         2367   X            MOV  ICS89, A
                                         2368   X            MOV  ICS1011, A
                                         2369   X  #  endif ; ((SERIES == 96350) && ...
                                         2370   X  #  if (((SERIES == MB96330) && (DEVICE < 2))  ||
                                                    \
                                         2371   X         ((SERIES == MB96340) && (DEVICE < 27)) ||
                                                    \
                                         2372   X         ((SERIES == MB96370) && (DEVICE < 3))  ||
                                                    \
                                         2373   X         ((SERIES == MB96380) && (DEVICE < 13)))
                                         2374   X            MOVN A, #0
                                         2375   X            MOV  ICE01, A
                                         2376   X            MOV  ICE67, A
                                         2377   X  #  endif ; (((SERIES == MB96330) && (DEVICE < 2)
                                                   ) || ...
                                         2378      #endif ; (UART_SCANNING == ON)
                                         2379
                                         2380      ;===============================================
                                                   =====================
                                         2381      ; 6.12  Wait for clocks to stabilize
                                         2382      ;===============================================
                                                   =====================
                                         2383
                                         2384      #if CLOCKWAIT == ON
                                         2385      #  if CLKB_CLKP1_SOURCE == CLOCK_MAIN
                                         2386   X  no_MC_yet:
                                         2387   X            BBC  CKMR:5,no_MC_yet        ; check M
                                                   CM and wait for
                                         2388   X                                         ; Main Cl
                                                   ock to stabilize
                                         2389      #  elif CLKB_CLKP1_SOURCE == CLOCK_PLL
CO 0000BA                                2390      no_PLL_yet:
CO 0000BA 6C9E0304FB                     2391                BBC  CKMR:6,no_PLL_yet       ; check P
                                                   CM and wait for
                                         2392                                             ; PLL to
                                                   stabilize
                                         2393      #    if MTCR_STABILIZED != MTCR_INITIAL
CO 0000BF 73DFF203096B                   2394                MOVW MTCRA, # MTCR_STABILIZED
                                         2395      #      if FLASH_B_AVAILABLE == ON
                                         2396   X            MOVW MTCRB, # MTCR_STABILIZED
                                         2397      #      endif ; if FLASH_B_AVAILABLE == ON
                                         2398      #    endif ; if MTCR_STABILIZED != MTCR_INITIAL
                                         2399      #  else
                                         2400   X  #    error Setting of CLKB_CLKP1_SOURCE is not s
                                                   upported.
                                         2401      #  endif
                                         2402      #endif
                                         2403
                                         2404      ;===============================================
                                                   =====================
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  70
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                         2405      ; 6.13  Initialise Low-Level Library Interface
                                         2406      ;===============================================
                                                   =====================
                                         2407      ;
                                         2408      ; Call lib init function and reload stack afterw
                                                   ards, if AUTOMODEL
                                         2409      ;===============================================
                                                   =====================
                                         2410      #if CLIBINIT == ON
                                         2411   X  #  if MEMMODEL == SMALL || MEMMODEL == COMPACT
                                         2412   X            CALL __stream_init       ; initialise
                                                   library IO
                                         2413   X  #  else                            ; MEDIUM, LAR
                                                   GE, AUTOMODEL
                                         2414   X            CALLP __stream_init      ; initialise
                                                   library IO
                                         2415   X  #    if MEMMODEL == AUTOMODEL
                                         2416   X            RELOAD_SP                ; reload stac
                                                   k since stream_init was
                                         2417   X                                     ; possibly le
                                                   ft by RET (not RETP)
                                         2418   X  #    endif  ; AUTOMODEL
                                         2419   X  #  endif  ; MEDIUM, LARGE, AUTOMODEL
                                         2420      #endif  ; LIBINI
                                         2421
                                         2422      ;===============================================
                                                   =====================
                                         2423      ; 6.14  Call C-language main function
                                         2424      ;===============================================
                                                   =====================
                                         2425      #if MEMMODEL == SMALL || MEMMODEL == COMPACT
                                         2426   X            CALL _main               ; Start main
                                                   function
                                         2427      #else                              ; MEDIUM, LAR
                                                   GE, AUTOMODEL
CO 0000C5 65000000                  I    2428                CALLP _main              ; Start main
                                                   function
                                         2429                                         ; ignore rema
                                                   ining word on stack,
                                         2430                                         ; if main was
                                                    completed by RET
                                         2431      #endif
                                         2432      ;===============================================
                                                   =====================
                                         2433      ; 6.15  Shut down library
                                         2434      ;===============================================
                                                   =====================
                                         2435      #if CLIBINIT == ON
                                         2436   X  #  if MEMMODEL == SMALL || MEMMODEL == COMPACT
                                         2437   X            CALL _exit
                                         2438   X  #  else                            ; MEDIUM, LAR
                                                   GE, AUTOMODEL
                                         2439   X            CALLP _exit              ; ignore rema
                                                   ining word on stack,
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  71
STARTUP FILE FOR MEMORY INITIALISATION

SN LOC    OBJ                           LLINE      SOURCE

                                         2440   X                                     ; if main was
                                                    completed by RET
                                         2441   X  #  endif
                                         2442   X  __exit:
                                         2443      #endif
                                         2444
                                         2445      ;===============================================
                                                   =====================
                                         2446      ; 6.16  Program end loop
                                         2447      ;===============================================
                                                   =====================
                                         2448
CO 0000C9 60FE                           2449      end:      BRA  end                 ; Loop
                                         2450
          =>  00000001              R    2451                .END notresetyet         ; define debu
                                                   gger start address
_____________________________________________________________________________
F2MC-16 Family SOFTUNE Assembler V30L13       2015-01-22 10:24:14   Page:  72
- SECTION LISTING - ( STARTUP )

   NO SECTION-NAME                       SIZE  ATTRIBUTES

    0 RESVECT  . . . . . . . . . . . .  000004 CONST   ABS LOCATE=FFFFDC
    1 BOOT_SELECT  . . . . . . . . . .  000004 CONST   ABS LOCATE=DF0030
    2 UART_SCAN_SELECT . . . . . . . .  00000C CONST   ABS LOCATE=DF0034
    3 VERSIONS . . . . . . . . . . . .  00000C CONST   REL ALIGN=2
    4 DATA . . . . . . . . . . . . . .  000000 DATA    REL ALIGN=2
    5 DATA2  . . . . . . . . . . . . .  000000 DATA    REL ALIGN=2
    6 DIRDATA  . . . . . . . . . . . .  000000 DIR     REL ALIGN=2
    7 LIBDATA  . . . . . . . . . . . .  000000 DATA    REL ALIGN=2
    8 INIT . . . . . . . . . . . . . .  000000 DATA    REL ALIGN=2
    9 INIT2  . . . . . . . . . . . . .  000000 DATA    REL ALIGN=2
   10 DIRINIT  . . . . . . . . . . . .  000000 DIR     REL ALIGN=2
   11 LIBINIT  . . . . . . . . . . . .  000000 DATA    REL ALIGN=2
   12 CINIT  . . . . . . . . . . . . .  000000 DATA    REL ALIGN=2
   13 CINIT2 . . . . . . . . . . . . .  000000 DATA    REL ALIGN=2
   14 DCONST . . . . . . . . . . . . .  000000 CONST   REL ALIGN=2
   15 DIRCONST . . . . . . . . . . . .  000000 DIR CNS REL ALIGN=2
   16 LIBDCONST  . . . . . . . . . . .  000000 CONST   REL ALIGN=2
   17 CONST  . . . . . . . . . . . . .  000000 CONST   REL ALIGN=2
   18 CONST2 . . . . . . . . . . . . .  000000 CONST   REL ALIGN=2
   19 RAMCODE  . . . . . . . . . . . .  000000 CODE    REL ALIGN=1
   20 RAMCODE2 . . . . . . . . . . . .  000000 CODE    REL ALIGN=1
   21 DCLEAR . . . . . . . . . . . . .  000012 CONST   REL ALIGN=2
   22 DTRANS . . . . . . . . . . . . .  000046 CONST   REL ALIGN=2
   23 SSTACK . . . . . . . . . . . . .  000300 STACK   REL ALIGN=2
   24 USTACK . . . . . . . . . . . . .  000002 STACK   REL ALIGN=2
   25 FLASH_A_SECURITY . . . . . . . .  00001C CONST   ABS LOCATE=DF0000
   26 FLASH_A_PROTECT  . . . . . . . .  000014 CONST   ABS LOCATE=DF001C
   27 BDM_CONFIG . . . . . . . . . . .  000040 CONST   ABS LOCATE=DF0040
   28 CODE_START . . . . . . . . . . .  0000CB CODE    REL ALIGN=1
